OBJECT Codeunit 50014 E-Invoice Integration
{
  OBJECT-PROPERTIES
  {
    Date=19-05-23;
    Time=[ 1:22:26 PM];
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GenerateJSON@1000000000 : Text;
      UnRegCusrErr@1000000001 : TextConst 'ENU=E-Invoicing is not applicable for Unregistered Customer.;ENN=E-Invoicing is not applicable for Unregistered Customer.';
      SalesInvoiceHeader@1000000003 : Record 112;
      SalesCrMemoHeader@1000000002 : Record 114;
      recLocTable@1000000157 : Record 14;
      recGSTRegNo@1000000156 : Record 16400;
      EWayBillandEinvoice@1000000155 : Record 50053;
      TaxScheme@1000000207 : Text[50];
      DocCategory@1000000206 : Text[50];
      recSalesInvHeader@1000000204 : Record 112;
      recSalesCMHeader@1000000201 : Record 114;
      recSalesCMLine@1000000200 : Record 115;
      recTranShipHdr@1000000199 : Record 5744;
      recTranShipLine@1000000198 : Record 5745;
      recSerInvHdr@1000000197 : Record 5992;
      recSerInvLine@1000000196 : Record 5993;
      recSerCMHdr@1000000195 : Record 5994;
      recSerCMLine@1000000194 : Record 5995;
      IsInvoice@1000000191 : Boolean;
      Typ@1000000190 : Text[3];
      Dt@1000000189 : Text[10];
      OrgInvNo@1000000188 : Text[25];
      "-------Supplier"@1000000187 : Integer;
      CompanyInformationBuff@1000000186 : Record 79;
      LocationBuff@1000000185 : Record 14;
      Gstin@1000000184 : Text[15];
      TrdNm@1000000183 : Text[100];
      Bno@1000000182 : Text[60];
      Bnm@1000000181 : Text[60];
      Flno@1000000180 : Text[60];
      Loc@1000000179 : Text[60];
      Dst@1000000178 : Text[60];
      Pin@1000000177 : Text[6];
      Stcd@1000000176 : Text[2];
      Ph@1000000175 : Text[10];
      Em@1000000174 : Text[50];
      Statename@1000000173 : Text;
      recState@1000000172 : Record 13762;
      SupplierGSTIN@1000000171 : Text[20];
      SupplierTradeName@1000000170 : Text[100];
      SupplierLegalName@1000000169 : Text[100];
      SupplierAddress1@1000000168 : Text[100];
      SupplierAddress2@1000000167 : Text[100];
      SupplierLocation@1000000166 : Text[20];
      SupplierPinCode@1000000165 : Text[10];
      SupplierStateCode@1000000164 : Text[20];
      SupplierPhone@1000000163 : Text[20];
      SupplierEmail@1000000162 : Text[50];
      "---------Customer"@1000000161 : Integer;
      Distance@1000000154 : Text;
      VehicleNo@1000000153 : Text;
      VehicleType@1000000152 : Text;
      CustomerType@1000000151 : Text;
      CustomerCode@1000000150 : Text;
      Contact@1000000149 : Record 5050;
      SalesInvoiceLine@1000000148 : Record 113;
      SalesCrMemoLine@1000000147 : Record 115;
      ShipToAddr@1000000146 : Record 222;
      ShippingBillDate@1000000145 : Text;
      StateBuff@1000000144 : Record 13762;
      recLoc@1000000143 : Record 14;
      recCust@1000000142 : Record 18;
      CustomerTAN@1000000141 : Text;
      CustomerGSTIN@1000000140 : Text;
      CustomerTradeName@1000000139 : Text;
      CustomerLegalName@1000000138 : Text;
      CustomerAddress1@1000000137 : Text;
      CustomerAddress2@1000000136 : Text;
      CustomerLocation@1000000135 : Text;
      CustomerPincode@1000000134 : Text;
      CustomerStateCode@1000000133 : Text;
      CustomerPhone@1000000132 : Text;
      CustomerEmail@1000000131 : Text;
      CustomerPANOrAadhaar@1000000130 : Text;
      "------Dispatch"@1000000129 : Integer;
      DispatcherGSTIN@1000000128 : Text;
      DispatcherTradeName@1000000127 : Text;
      DispatcherAddress1@1000000126 : Text;
      DispatcherAddress2@1000000125 : Text;
      DispatcherLocation@1000000124 : Text;
      DispatcherPincode@1000000123 : Text;
      DispatcherStateCode@1000000122 : Text;
      "-----Ship"@1000000121 : Integer;
      ShipToGSTIN@1000000120 : Text;
      ShipToTradeName@1000000119 : Text;
      ShipToLegalName@1000000118 : Text;
      ShipToAddress1@1000000117 : Text;
      ShipToAddress2@1000000116 : Text;
      ShipToLocation@1000000115 : Text;
      ShipToPincode@1000000114 : Text;
      ShipToStateCode@1000000113 : Text;
      ShipToPhone@1000000112 : Text;
      ShipToEmail@1000000111 : Text;
      "--------------Item"@1000000110 : Integer;
      AssAmt@1000000109 : Decimal;
      CgstRt@1000000108 : Decimal;
      SgstRt@1000000107 : Decimal;
      IgstRt@1000000106 : Decimal;
      CesRt@1000000105 : Decimal;
      CesNonAdval@1000000104 : Decimal;
      StateCes@1000000103 : Decimal;
      FreeQty@1000000102 : Decimal;
      recSalesInvLine@1000000101 : Record 113;
      Isservice@1000000100 : Text[2];
      GSTBaseamt@1000000099 : Decimal;
      GSTper@1000000098 : Decimal;
      cessamount@1000000097 : Decimal;
      statecessamount@1000000096 : Decimal;
      statecessnonadvolamount@1000000095 : Decimal;
      recILE@1000000094 : Record 32;
      Expiry@1000000093 : Text;
      Warranty@1000000092 : Text;
      Lotno@1000000091 : Text;
      itemattributedetails@1000000090 : Text;
      itemattributevalue@1000000089 : Text;
      recVE@1000000088 : Record 5802;
      Sno@1000000087 : Integer;
      decDiscAmt@1000000086 : Decimal;
      ProductNo@1000000085 : Text;
      PaymentTerms@1000000084 : Text;
      lineitem@1000000083 : Text;
      Itemlist@1000000082 : Text;
      ProductDescription@1000000081 : Text;
      HSN@1000000080 : Text;
      QTY@1000000079 : Decimal;
      UnitPrice@1000000078 : Text;
      ItemAmount@1000000077 : Text;
      ItemDiscount@1000000076 : Text;
      PreTaxAmount@1000000075 : Text;
      CurrencyCode@1000000074 : Text;
      recDGLE@1000000073 : Record 16419;
      IGSTRate@1000000072 : Decimal;
      IGSTAmount@1000000071 : Decimal;
      CGSTRate@1000000070 : Decimal;
      CGSTAmount@1000000069 : Decimal;
      SGSTRate@1000000068 : Decimal;
      SGSTAmount@1000000067 : Decimal;
      FreeQuantity@1000000066 : Text;
      "--------Transfer Shipment--------"@1000000065 : Integer;
      catg@1000000064 : Text;
      RegRev@1000000063 : Text;
      IgstIntra@1000000062 : Text;
      SellerTradeName@1000000061 : Text;
      company_name@1000000060 : Text;
      SellerLegalName@1000000059 : Text;
      SellerGSTIN@1000000058 : Text;
      SellerAddress1@1000000057 : Text;
      SellerAddress2@1000000056 : Text;
      SellerLocation@1000000055 : Text;
      SellerPostCode@1000000054 : Text;
      SellerStateCode@1000000053 : Text;
      SellerPhone@1000000052 : Text;
      SellerEmail@1000000051 : Text;
      "--------Push----"@1000000050 : Integer;
      JSON@1000000049 : Text;
      Jsonuri@1000000048 : Text;
      RequestVar@1000000047 : Text;
      CRLF@1000000046 : Text;
      WinHttpService@1000000045 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebRequest";
      sb@1000000044 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.StringBuilder";
      stream@1000000043 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamWriter";
      lgResponse@1000000042 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebResponse";
      credentials@1000000041 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.CredentialCache";
      reader@1000000040 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
      responsetext@1000000039 : Text[1000];
      uriObj@1000000038 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      PrefixArray@1000000037 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      DataString@1000000036 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      DataArray@1000000035 : ARRAY [500] OF Boolean;
      StringReader@1000000034 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StringReader";
      Location@1000000033 : Text;
      TransType@1000000032 : Text[20];
      UsersID@1000000031 : Text[20];
      CategoryOfProduct@1000000030 : Text[20];
      DocCateg@1000000029 : Text;
      CountryCode@1000000028 : Text[20];
      InvoiceValueFC@1000000027 : Text[20];
      InvoicePeriodStartDate@1000000026 : Text[20];
      InvoicePeriodEndDate@1000000025 : Text[20];
      SubSupplyType@1000000024 : Text[20];
      UQC@1000000023 : Text[20];
      TotalItemAmount@1000000022 : Decimal;
      InvoiceOtherCharges@1000000021 : Decimal;
      InvoiceAssessableAmount@1000000020 : Decimal;
      InvoiceIGSTAmount@1000000019 : Decimal;
      InvoiceCGSTAmount@1000000018 : Decimal;
      InvoiceSGSTAmount@1000000017 : Decimal;
      ItemOtherCharges@1000000016 : Decimal;
      ReturnPeriod@1000000015 : Text;
      txtLoc@1000000014 : Text;
      TextLoc@1000000013 : Text;
      SNum@1000000012 : Integer;
      SupplyType@1000000011 : Text;
      ItemAssessableAmount@1000000010 : Decimal;
      recUOM@1000000009 : Record 204;
      recIUOM@1000000008 : Record 5404;
      TaxAmount@1000000007 : Decimal;
      DocType@1000000006 : Text[20];
      InvoiceValue@1000000005 : Decimal;
      Where@1000000158 : Text;
      Which@1000000159 : Text;
      ProdList@1000000160 : Text;
      SalesLinesErr@1000000004 : TextConst '@@@="%1 = Sales Lines count";ENU=E-Invoice allowes only 100 lines per Invoice. Curent transaction is having %1 lines.;ENN=E-Invoice allowes only 100 lines per Invoice. Curent transaction is having %1 lines.';
      preDocDtls@1000000192 : Text;
      PreDOC@1000000193 : Text;
      contrDtls@1000000202 : Text;
      ConDetail@1000000203 : Text;
      addlDocDtls@1000000205 : Text;
      addDoc@1000000208 : Text;
      attribDtls@1000000209 : Text;
      attrDetail@1000000210 : Text;
      invIGstAmt@1000000211 : Decimal;
      TempBlob@1000000213 : Record 99008535;
      ResponseHeader@1000000215 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameObjectCollectionBase";
      HttpWebRequest@1000000226 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebRequest";
      HttpWebResponse@1000000225 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpWebResponse";
      HttpStatusCode@1000000224 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      Stream1@1000000223 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";
      Encoding@1000000222 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      ResStreamReader@1000000221 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.StreamReader";
      ResStream@1000000220 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";
      Response@1000000219 : Text;
      RequestData@1000000218 : Text;
      HttpResStatus@1000000217 : Integer;
      AccessToken@1000000216 : Text;
      AuthURL@1000000228 : Text;
      GenIRNURL@1000000233 : Text;
      AuthUserName@1000000229 : Text;
      AuthPassword@1000000230 : Text;
      APIAccessKey@1000000231 : Text;
      tempbolb@1000000232 : Record 99008535;
      ResponseStr@1000000234 : Text;
      GenIRN@1000000212 : DotNet "'Draeger.CommonV3, Version=3.0.0.0, Culture=neutral, PublicKeyToken=69ae89b5837a4832'.Draeger.Common.EInvoicing" RUNONCLIENT;
      SelectString@1000000227 : Text;
      DocNo@1000000235 : Text;
      IRNNo@1000000236 : Text;
      recResponseLog@1000000237 : Record 50054;
      GetString@1000000238 : Text;
      AckNo@1000000239 : Text;
      AcKDate@1000000240 : Text;
      EInvStatus@1000000241 : Text;
      QRCode@1000000242 : Text;
      Instr@1000000214 : OutStream;
      recSaleRecSetup@1000000243 : Record 311;
      recShiptoAdd1@1000000244 : Record 18;
      recCountry@1000000245 : Record 9;
      recCustForBill@1000000246 : Record 18;
      recCustForShip@1000000247 : Record 18;
      recCustomerBill@1000000248 : Record 18;

    PROCEDURE GenerateJSONforSalesInv@1000000000(rec@1000000000 : Record 50053);
    VAR
      recSalesInvHeader@1000000001 : Record 112;
      recSalesInvLine@1000000002 : Record 113;
    BEGIN
      GenerateJSON := '';
      SNum := 0; //KH170221
      SupplyType := '';
      Typ := '';
      Dt := '';
      ReturnPeriod := '';
      OrgInvNo := '';
      CurrencyCode := '';
      DocCateg := '';
      TaxScheme := '';
      SupplierGSTIN := '';
      SupplierTradeName := '';
      SupplierLegalName := '';
      SupplierAddress1 := '';
      SupplierAddress2 := '';
      SupplierLocation := '';
      SupplierPinCode := '';
      Statename := '';
      SupplierPhone := 'null'; //kh170221
      SupplierEmail := 'null'; //kh170221
      CustomerTAN := 'null'; //kh170221
      CustomerGSTIN := '';
      CustomerPANOrAadhaar := 'null';
      CountryCode :='';
      CustomerTradeName := '';
      CustomerLegalName := '';
      CustomerAddress1 := '';
      CustomerAddress2 := '';
      CustomerLocation := '';
      CustomerPincode :='';
      TransType := '';
      Distance :='';
      VehicleNo := '';
      VehicleType :='';
      PaymentTerms :='null';
      CustomerCode :='';
      CustomerType := 'null'; //KH170221
      CustomerStateCode := '';
      CustomerPhone := '';
      CustomerEmail := 'null';//KH170221
      DispatcherGSTIN := '';
      DispatcherTradeName := '';
      DispatcherAddress1 := '';
      DispatcherAddress2 := '';
      DispatcherLocation := '';
      DispatcherPincode := 'null';
      DispatcherStateCode := '';
      ShipToGSTIN :=  'null';
      ShipToTradeName := 'null';
      ShipToLegalName := 'null';
      ShipToAddress1 := 'null';
      ShipToAddress2 := 'null';
      ShippingBillDate := 'null';
      ShipToLocation := 'null';
      ShipToPincode :=  'null';
      ShipToStateCode := 'null';
      ShipToPhone := '';
      ShipToEmail := '';

      DocType := 'Sales Invoice';
      //SNum := 0;
      IGSTRate := 0;
      IGSTAmount := 0;
      CGSTRate := 0;
      CGSTAmount := 0;
      SGSTRate :=0;
      SGSTAmount := 0;
      QTY := 0;
      ProductNo := '' ;
      ProductDescription := '' ;
      HSN := '';
      UnitPrice := '';
      ItemAmount := '';
      ItemDiscount := '0';
      PreTaxAmount := '';
      Location := '';
      Isservice := '';
      CategoryOfProduct := '';
      InvoiceValueFC := '';
      InvoicePeriodStartDate := '';
      InvoicePeriodEndDate := '';
      UQC := '';
      TotalItemAmount := 0;
      ItemOtherCharges := 0;
      ItemAssessableAmount := 0;


      recSalesInvHeader.RESET;
      recSalesInvHeader.SETRANGE("No.",rec."No.");
      IF recSalesInvHeader.FIND('-') THEN BEGIN

      IF recSalesInvHeader."GST Customer Type" IN [recSalesInvHeader."GST Customer Type"::Unregistered,recSalesInvHeader."GST Customer Type"::" "]
          THEN
            ERROR(UnRegCusrErr);

        IF recSalesInvHeader."Invoice Type" = recSalesInvHeader."Invoice Type"::Taxable THEN
          Typ := 'INV'
        ELSE
          IF (recSalesInvHeader."Invoice Type" = recSalesInvHeader."Invoice Type"::"Debit Note") OR
             (recSalesInvHeader."Invoice Type" = recSalesInvHeader."Invoice Type"::Supplementary)
          THEN
            Typ := 'DBN'
          ELSE
            Typ := 'INV';

        UsersID := recSalesInvHeader."User ID"; //KH170221
        Dt := FORMAT(recSalesInvHeader."Posting Date",0,'<Day,2>-<Month,2>-<Year4>');//KH170221
        ReturnPeriod := FORMAT(recSalesInvHeader."Posting Date",0,'<Month,2><Year4>');
        OrgInvNo := recSalesInvHeader."No.";
         //KH040121 BEGIN
         IF recSalesInvHeader."Currency Code" <> '' THEN BEGIN
            CurrencyCode := recSalesInvHeader."Currency Code"
         END ELSE
            CurrencyCode := 'INR';
       //KH040121 END
         IF recSalesInvHeader."Ship-to Code" <> '' THEN BEGIN
            DocCateg := 'SHP'
         END ELSE
            DocCateg := 'REG';

      IF  recCust.GET(recSalesInvHeader."Bill-to Customer No.") THEN BEGIN
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             SupplyType := 'TAX';
            // TaxScheme := 'GST';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             SupplyType := 'TAX';
        //     TaxScheme := 'NEINV';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
          //   TaxScheme := 'GST';
             SalesInvoiceLine.RESET;
             SalesInvoiceLine.SETRANGE("Document No.",recSalesInvHeader."No.");
             IF SalesInvoiceLine.FIND('-') THEN BEGIN
             REPEAT
             TaxAmount += SalesInvoiceLine."Total GST Amount";
             UNTIL SalesInvoiceLine.NEXT = 0;
             END;
            IF TaxAmount <> 0 THEN
             SupplyType := 'EXPT'
             ELSE
             SupplyType := 'EXPWT';
          END;
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
               SupplyType := 'EXT';
             //TaxScheme := 'NEINV';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             SupplyType := 'DXP';
        //     TaxScheme := 'GST';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             TaxScheme := 'GST';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             TaxScheme := 'NEINV';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
             TaxScheme := 'GST';
          END;

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
             TaxScheme := 'NEINV';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             TaxScheme := 'GST';
      END;


           recLoc.GET(recSalesInvHeader."Location Code");
        //  SupplierGSTIN := recLoc."Location GST Reg. No.";
          CompanyInformationBuff.GET;
          LocationBuff.GET(recSalesInvHeader."Location Code");
          SupplierGSTIN := LocationBuff."GST Registration No."; //KH040121
          SupplierTradeName := 'Draeger India Pvt Ltd.';
          SupplierLegalName := 'Draeger India Pvt Ltd.';
          SupplierAddress1 := LocationBuff.Address;
          SupplierAddress2 := LocationBuff."Address 2";
          Flno := '';
          SupplierLocation := LocationBuff.City;
          Dst := LocationBuff.City;
          SupplierPinCode := COPYSTR(LocationBuff."Post Code",1,6);
          StateBuff.GET(LocationBuff."State Code");
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          recState.RESET;
          recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
            IF recState.FIND('-') THEN BEGIN
            Statename := recState.Description;
            END;
          SupplierPhone := '"'+COPYSTR(LocationBuff."Phone No.",1,10)+'"'; //KH170221
          SupplierEmail := '"'+COPYSTR(LocationBuff."E-Mail",1,50)+'"';//KH170221

      //For customer detail
          //recLoc.GET(recSalesInvHeader."Location Code");
          recCust.GET(recSalesInvHeader."Bill-to Customer No.");

          CustomerTAN := '"'+recCust."T.A.N No."+'"';  //KH040121 //kh170221
          CustomerGSTIN := recCust."GST Registration No.";//KH040121
          CustomerPANOrAadhaar := '"'+recCust."P.A.N. No."+'"'; //KH040121 //kh170221
          CountryCode  := recCust."Country/Region Code"; //KH040121
          CustomerTradeName := recSalesInvHeader."Bill-to Name";
          CustomerLegalName := recSalesInvHeader."Bill-to Name";
          CustomerAddress1 := recSalesInvHeader."Bill-to Address";
          CustomerAddress2 := recSalesInvHeader."Bill-to Address 2";
          IF CustomerAddress2 = '' THEN
          CustomerAddress2 := 'null';
          Flno := '';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN
          CustomerLocation := 'null'
          ELSE
          CustomerLocation := recSalesInvHeader."Bill-to City";
          Dst := recSalesInvHeader."Bill-to City";
          IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
          CustomerPincode := '999999'
          ELSE
          CustomerPincode := COPYSTR(recSalesInvHeader."Bill-to Post Code",1,6);
          TransType := FORMAT(recSalesInvHeader."Transaction Type");//kh040121
      //    Distance := FORMAT(recSalesInvHeader."Distance (Km)");
          VehicleNo := '';
      //    VehicleType := FORMAT(recSalesInvHeader."Vehicle Type");
          PaymentTerms := recSalesInvHeader."Payment Terms Code";
          CustomerCode :=recSalesInvHeader."Bill-to Customer No.";
          //CustomerType := '';
          SalesInvoiceLine.SETRANGE("Document No.",recSalesInvHeader."No.");
          SalesInvoiceLine.SETFILTER(Quantity,'<>%1',0);
          IF SalesInvoiceLine.FINDFIRST THEN
            IF SalesInvoiceLine."GST Place of Supply" = SalesInvoiceLine."GST Place of Supply"::"Bill-to Address" THEN BEGIN
             // IF NOT (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) OR (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::"Deemed Export") THEN BEGIN
                IF NOT (recSalesInvHeader."GST Customer Type" IN [recSalesInvHeader."GST Customer Type"::Export,recSalesInvHeader."GST Customer Type"::"Deemed Export"]) THEN BEGIN
                StateBuff.GET(recSalesInvHeader."GST Bill-to State Code");
                CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
              END ELSE
                CustomerStateCode := '96';
              recCust.RESET();
              recCust.SETRANGE("No.",recSalesInvHeader."Sell-to Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';

              IF Contact.GET(recSalesInvHeader."Bill-to Contact No.") THEN BEGIN
                CustomerPhone := COPYSTR(Contact."Phone No.",1,10);
                CustomerEmail := '"'+COPYSTR(Contact."E-Mail",1,50)+'"'; //KH170221
              END ELSE BEGIN
                  IF recCust.GET(recSalesInvHeader."Sell-to Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"';//KH170221
                  END;
              END;
            END ELSE
              IF SalesInvoiceLine."GST Place of Supply" = SalesInvoiceLine."GST Place of Supply"::"Ship-to Address" THEN BEGIN
                IF NOT (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN BEGIN
                  StateBuff.GET(recSalesInvHeader."GST Ship-to State Code");
                  CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
                END ELSE
                  CustomerStateCode := '96';
              recCust.RESET();
              recCust.SETRANGE("No.",recSalesInvHeader."Sell-to Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';

                IF ShipToAddr.GET(recSalesInvHeader."Sell-to Customer No.",recSalesInvHeader."Ship-to Code") THEN BEGIN
                  CustomerPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
                  CustomerEmail := '"'+COPYSTR(ShipToAddr."E-Mail",1,50)+'"'; //KH170221
                END ELSE BEGIN
                  IF recCust.GET(recSalesInvHeader."Sell-to Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"'; //KH170221
                  END;
                END;
              END ELSE BEGIN
                CustomerStateCode := '';
                CustomerPhone := '';
                CustomerEmail := 'null';
              END;

      //FOR Dispatch

          recLoc.GET(recSalesInvHeader."Location Code");
          DispatcherGSTIN := recLoc."GST Registration No.";
          DispatcherTradeName := recLoc.Name;
          DispatcherAddress1 := recLoc.Address;
          DispatcherAddress2 := recLoc."Address 2";
          DispatcherLocation := recLoc.City;
          DispatcherPincode := recLoc."Post Code";
          recState.RESET();
          recState.SETRANGE(Code,recLoc."State Code");
            IF recState.FIND('-') THEN
              DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //For Ship detail

          IF recSalesInvHeader."Ship-to Code" <> '' THEN BEGIN
            recLoc.GET(recSalesInvHeader."Location Code");
            ShipToAddr.GET(recSalesInvHeader."Sell-to Customer No.",recSalesInvHeader."Ship-to Code");
            ShipToGSTIN := '"'+ShipToAddr."GST Registration No."+'"';//KH170221
            IF ShipToAddr."GST Registration No." = '' THEN //KH070423
            ShipToGSTIN := '"'+'URP'+'"';//KH070423
            ShipToTradeName := '"'+recSalesInvHeader."Ship-to Name"+'"';
            ShipToLegalName := '"'+recSalesInvHeader."Ship-to Name"+'"';
            ShipToAddress1 := '"'+recSalesInvHeader."Ship-to Address"+'"';
            ShipToAddress2 := '"'+recSalesInvHeader."Ship-to Address 2"+'"';
            Flno := '';
            ShippingBillDate := '"'+FORMAT(recSalesInvHeader."Shipment Date")+'"';
            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := '"'+'null'+'"'
            ELSE
            ShipToLocation := '"'+recSalesInvHeader."Ship-to City"+'"';
            Dst := recSalesInvHeader."Ship-to City";
            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '"'+'999999'+'"'
            ELSE
            ShipToPincode := '"'+COPYSTR(recSalesInvHeader."Ship-to Post Code",1,6)+'"';
            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recSalesInvHeader."GST Ship-to State Code")THEN
            ShipToStateCode := '"'+StateBuff."State Code (GST Reg. No.)"+'"';
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
            ShipToEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
          END
          //DRGKH021122 BEGIN As request of Ashish and arvind
          {
          ELSE
          IF recSalesInvHeader."Ship-to Code" = '' THEN BEGIN
            //recLoc.GET(recSalesInvHeader."Location Code");
            recCust.GET(recSalesInvHeader."Sell-to Customer No.");
            ShipToGSTIN := '"'+recCust."GST Registration No."+'"';  //kh
            ShipToTradeName := recSalesInvHeader."Sell-to Customer Name";
            ShipToLegalName := recSalesInvHeader."Sell-to Customer Name";
            ShipToAddress1 := recSalesInvHeader."Sell-to Address";
            ShipToAddress2 := recSalesInvHeader."Sell-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSalesInvHeader."Shipment Date");
            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSalesInvHeader."Sell-to City";
            Dst := recSalesInvHeader."Sell-to City";
            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSalesInvHeader."Sell-to Post Code",1,6);

            IF (recSalesInvHeader."GST Customer Type" = recSalesInvHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recCust."State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";

            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(recCust."Phone No.",1,10);
            ShipToEmail := COPYSTR(recCust."E-Mail",1,50);
          END;
          }
          //DRGKH021122 END As request of Ashish and arvind
      END;
          InvoiceValue := 0 ;
          InvoiceOtherCharges := 0;
          InvoiceAssessableAmount := 0;
          InvoiceIGSTAmount := 0;
          InvoiceCGSTAmount := 0;
          InvoiceSGSTAmount := 0;

          SalesInvoiceLine.RESET;
          SalesInvoiceLine.SETRANGE("Document No.",recSalesInvHeader."No.");
          IF SalesInvoiceLine.FIND('-') THEN BEGIN
          REPEAT
          //"Sales Invoice Line".CALCFIELDS("Charges To Customer");
          IF SalesInvoiceLine.Quantity <> 0 THEN BEGIN
          InvoiceOtherCharges += SalesInvoiceLine."TDS/TCS Amount";  //kh
          END;
          InvoiceAssessableAmount += (SalesInvoiceLine."Line Amount" - SalesInvoiceLine."Line Discount Amount" + SalesInvoiceLine."Charges To Customer");
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",SalesInvoiceLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",SalesInvoiceLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceIGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",SalesInvoiceLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",SalesInvoiceLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceCGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",SalesInvoiceLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",SalesInvoiceLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceSGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          UNTIL SalesInvoiceLine.NEXT = 0;
          END;

         InvoiceValue := (InvoiceAssessableAmount + InvoiceIGSTAmount + InvoiceCGSTAmount + InvoiceSGSTAmount + InvoiceOtherCharges);

        //For Item
        recSalesInvLine.RESET;
        recSalesInvLine.SETRANGE("Document No.",recSalesInvHeader."No.");
        recSalesInvLine.SETFILTER(Quantity,'<>%1',0);
        recSalesInvLine.SETFILTER("No.",'<>%1','44491050');
        IF recSalesInvLine.FIND('-') THEN BEGIN
        REPEAT
          {
           IF recSalesInvLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recSalesInvLine.COUNT);
           }
          lineitem := '';
          IF SalesInvoiceLine."GST Group Type" = SalesInvoiceLine."GST Group Type"::Goods THEN BEGIN
              Isservice := 'N';
          END ELSE BEGIN
          Isservice := 'Y';
          END;
          SNum += 1;
          ProductNo := recSalesInvLine."No.";
          ProductDescription :=DELCHR(recSalesInvLine.Description,'=','"');
          HSN := COPYSTR(recSalesInvLine."HSN/SAC Code",1,8);
          QTY := recSalesInvLine.Quantity;
          UnitPrice := FORMAT(ROUND(recSalesInvLine."Unit Price",0.01,'>'));
          ItemAmount :=   FORMAT(recSalesInvLine."Line Amount" - recSalesInvLine."Line Discount Amount" + recSalesInvLine."Charges To Customer");
          ItemDiscount := FORMAT(recSalesInvLine."Line Discount Amount");
          PreTaxAmount := FORMAT(recSalesInvLine."Line Amount");
          Location := recSalesInvLine."Location Code";
          CategoryOfProduct := recSalesInvLine."Item Category Code";
          InvoiceValueFC := FORMAT(recSalesInvLine."Amount To Customer");
          ItemOtherCharges := (recSalesInvLine."Charges To Customer" + recSalesInvLine."Line Amount");
          recIUOM.RESET;
          recIUOM.SETRANGE(Code,recSalesInvLine."Unit of Measure Code");
          IF recIUOM.FIND('-') THEN BEGIN
             recUOM.RESET;
             recUOM.SETRANGE(Code,recIUOM.Code);
             IF recUOM.FIND('-') THEN BEGIN
             UQC := recUOM.Description2
             END ELSE
             UQC := 'OTH';
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := (recDGLE."GST %");
             IGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;

        TotalItemAmount := (recSalesInvLine."Line Amount" - recSalesInvLine."Line Discount Amount" + recSalesInvLine."Charges To Customer" + IGSTAmount + CGSTAmount + SGSTAmount );
        ItemAssessableAmount := (recSalesInvLine."Line Amount" - recSalesInvLine."Line Discount Amount" + recSalesInvLine."Charges To Customer");
          lineitem := '{"itemNo":'+FORMAT(SNum)+',"glCodeTaxableVal":'+'null'+',"supplyType":'+'"'+SupplyType+'"'+',"fob":'+FORMAT(SNum)+',"exportDuty":'+'0'
          + ',"hsnsacCode":' + '"'+HSN+'"'+',"ProductCode":' +'"'+ ProductNo+'"'+ ',"itemDesc":' +'"'+ ProductDescription+'"'+ ',"itemType":'+'"'+CategoryOfProduct+'"'
          + ',"itemUqc":'+'"'+UQC+'"'+',"itemQty":'+DELCHR(FORMAT(QTY),'=',',')+',"taxableVal":'+DELCHR(FORMAT(ItemAssessableAmount),'=',',')
          +',"igstRt":'+DELCHR(FORMAT(IGSTRate),'=',',')+',"igstAmt":'+DELCHR(FORMAT(IGSTAmount),'=',',')+',"cgstRt":'+DELCHR(FORMAT(CGSTRate),'=',',')
          +',"cgstAmt":'+DELCHR(FORMAT(CGSTAmount),'=',',')
          +',"sgstRt":'+DELCHR(FORMAT(SGSTRate),'=',',')+',"sgstAmt":'+DELCHR(FORMAT(SGSTAmount),'=',',')
          +',"cessRtAdvalorem":'+'0'+',"cessAmtAdvalorem":'+'0'+',"cessRtSpecific":'+'0'+',"cessAmtSpecific":'+'0'+',"stateCessRt":'+'0'+',"stateCessAmt":'+'0'
          + ',"otherValues":'+'0'+',"lineItemAmt":'+DELCHR(FORMAT(InvoiceValue),'=',',')+',"tcsAmt":'+'0'
          +',"itcFlag":'+'null'+',"crDrReason":'+'null'+',"plantCode":'+'null'
          +',"serialNoII":'+'null' +',"ProductName":'+'null'+',"isService":' +'"'+ Isservice +'"'
          +',"barcode":'+'null'+',"batchNameOrNo":'+'null'+',"batchExpiryDate":'+'null'+',"warrantyDate":'+'null'
          +',"originCountry":'+'null' +',"freeQuantity":'+'0'
          +',"unitPrice":'+DELCHR(UnitPrice,'=',',')+',"itemAmt":'+DELCHR(ItemAmount,'=',',')+',"itemDiscount":'+DELCHR(ItemDiscount,'=',',')
          +',"preTaxAmt":'+DELCHR(PreTaxAmount,'=',',')
          +',"totalItemAmt":'+DELCHR(FORMAT(TotalItemAmount),'=',',')
          +',"orderLineRef":'+'null'+',"tcsCgstAmt":'+'null'+',"tcsSgstAmt":'+'null'
          +',"tdsIgstAmt":'+'0'+',"tdsCgstAmt":'+'0'+',"tdsSgstAmt":'+'0'+',"subDivision":'+'null'
          +',"udf1":'+'null'
          +',"udf2":'+'null'+',"udf3":'+'null'
          +',"udf4":'+'null'+',"udf5":'+'null'+',"udf6":'+'null'+',"udf7":'+'null'+',"udf8":'+'null'+',"udf9":'+'null'+',"udf10":'+'null'+',"udf11":'+'null'
          +',"udf12":'+'null'+',"udf13":'+'null'+',"udf14":'+'null'+',"udf15":'+'null'+',"udf16":'+'null'+',"udf17":'+'null'+',"udf18":'+'null'+',"udf19":'+'null'
          +',"udf20":'+'null'+',"udf21":'+'null'+',"udf22":'+'null'+',"udf23":'+'null'+',"udf24":'+'null'+',"udf25":'+'null'+',"udf26":'+'null'+',"udf27":'+'null'
          +',"udf28":'+'null'+',"udf29":'+'null'+',"udf30":'+'null'+',"ecomTransactionID":'+'null'
          +',"stateCessSpecificRt":'+'0'+',"stateCessSpecificAmt":'+'0'+',"tcsRtIncomeTax":'+'0'+',"tcsAmtIncomeTax":'+'0'+',"docRefNo":'+'null'+',"paidAmt":'+'0'+',"balanceAmt":'+'0'
          +',"profitCentre3":'+'null'+',"profitCentre4":'+'null'+',"profitCentre5":'+'null'
          +',"profitCentre6":'+'null'+',"profitCentre7":'+'null'+',"profitCentre8":'+'null'
          +'},' ;
          Itemlist += lineitem ;
        UNTIL recSalesInvLine.NEXT=0;
        END;
        //Where := '>' ;
       // Which := ',' ;
        ProdList := DELCHR(Itemlist,'>',',');

        PreDOC := '{"preceedingInvNo":'+'null'+',"preccedingInvDate":'+'null'+',"invRef":'+'null'+'}';
        ConDetail :='{"receiptAdviceRef":'+'null'+',"receiptAdviceDate":'+'null'+',"tenderRef":'+'null'+',"contractRef":'+'null'+',"externalRef":'+'null'+',"projectRef":'+'null'+',"custPoRefNo":'+'null'+',"custPoRefDate":'+'null'+'}';
        addDoc := '{"supportingDocURL":'+'null'+',"supportingDocBase64":'+'null'+',"addlInfo":'+'null'+'}';
        attrDetail := '{"attributeName":'+'null'+',"attributeValue":'+'null'+'}';

      GenerateJSON := '{ "req" :[  { "userId":'+'null'+',"srcFileName":'+'null'+',"srcIdentifier":'+'null'+',"returnPeriod":'+'"'+ReturnPeriod+'"'+ ',"suppGstin":'+ '"'+SupplierGSTIN+'"'
         + ',"docType" :'+ '"'+Typ+'"' + ',"docNo" :' + '"'+OrgInvNo+'"' +',"docDate":'+ '"'+Dt+'"'+',"orgDocType":'+'"'+'INV'+'"'+',"crDRPreGst":'+'null'
         +',"custGstin":'+ '"'+CustomerGSTIN+'"'+',"custOrSupType":'+CustomerType+',"diffPercent":'+'null'+',"orgCgstin":'+'"'+CustomerGSTIN+'"'
         +',"custOrSupName":'+'"'+CustomerLegalName+'"'+',"custOrSupCode":'+'"'+CustomerCode+'"'+',"custOrSupAddr1":'+'"'+CustomerAddress1+'"'
         +',"custOrSupAddr2":'+ '"'+CustomerAddress2+'"'+',"custOrSupAddr4":'+ '"'+CustomerLocation+'"'+',"billToState":'+'"'+CustomerStateCode+'"'
         +',"shipToState":'+ShipToStateCode+',"pos":'+'"'+CustomerStateCode+'"'+',"stateApplyingCess":'+'null'+',"portCode":'+'null'
         +',"shippingBillNo":'+'null'+',"shippingBillDate":'+ShippingBillDate+ ',"sec7OfIgstFlag":'+ 'null'
         + ',"reverseCharge":'+'null'+',"tcsFlag":'+'null'+',"ecomGSTIN":'+'null'+',"claimRefundFlag":'+'null'+',"autoPopToRefundFlag":'+'null'
         +',"accVoucherNo":'+'null'+',"accVoucherDate":'+'null'+',"ewbNo":'+'null'+',"ewbDate":'+'null'
         +',"irn" :' + 'null' + ',"irndate" :' + 'null'
         + ', "taxScheme" :' + '"'+TaxScheme+'"' + ',"docCat":'+ '"'+DocCateg+'"'+',"supTradeName":'+ '"'+SupplierTradeName+'"' + ',"supLegalName":'+ '"'+SupplierLegalName+'"'
         + ',"supBuildingNo":'+'"'+SupplierAddress1+'"'+',"supBuildingName":'+'"'+SupplierAddress2+'"'+',"supLocation":'+ '"'+SupplierLocation+'"' +',"supPincode":'+'"'+ SupplierPinCode+'"'
         +',"supStateCode":'+ '"'+SupplierStateCode+'"' +',"supPhone":'+'null'+',"supEmail":'+'null'
         +',"custTradeName":'+ '"'+CustomerTradeName+'"'+',"custLegalName":'+ '"'+CustomerTradeName+'"'+',"custPincode":'+'"'+CustomerPincode+'"'
         +',"custPhone":'+'null'+',"custEmail":'+'null'
         +',"dispatcherGSTIN":'+'null'+',"dispatcherTradeName":'+'null'
         +',"dispatcherBuildingNo":'+'null'+',"dispatcherBuildingName":'+'null'+',"dispatcherLocation":'+'null'
         +',"dispatcherPincode":'+'null'+',"dispatcherStateCode":'+'null'
         +',"shipToGstin":'+ShipToGSTIN+',"shipToTradeName":'+ ShipToTradeName
         +',"shipToLegalName":'+ShipToLegalName+',"shipToBuildingNo":'+ShipToAddress1+',"shipToBuildingName":'+ShipToAddress1+',"shipToLocation":'+ShipToLocation
         +',"shipToPincode":'+ShipToPincode+',"invOtherCharges":'+DELCHR(FORMAT(InvoiceOtherCharges),'=',',')+',"invAssessableAmt":'+DELCHR(FORMAT(InvoiceAssessableAmount),'=',',')
         +',"invIgstAmt":'+DELCHR(FORMAT(InvoiceIGSTAmount),'=',',')
         +',"invCgstAmt":'+DELCHR(FORMAT(InvoiceCGSTAmount),'=',',')+',"invSgstAmt":'+DELCHR(FORMAT(InvoiceSGSTAmount),'=',',')+',"invCessAdvaloremAmt":'+'0'
         +',"invCessSpecificAmt":'+'0'+',"invStateCessAmt":'+'0'+',"roundOff":'+'0'+',"totalInvValueInWords":'+'null'
         +',"foreignCurrency":'+'"'+CurrencyCode+'"'+',"countryCode":'+'"'+CountryCode+'"'+',"invValueFc":'+DELCHR(InvoiceValueFC,'=',',')
         +',"invPeriodStartDate":'+'null'
         +',"invPeriodEndDate":'+'null'+',"payeeName":'+'null'+',"modeOfPayment":'+'null'+',"branchOrIfseCode":'+'null'+',"paymentTerms":'+'"'+PaymentTerms+'"'
         +',"paymentInstruction":'+'null'+',"creditTransfer":'+'null'+',"directDebit":'+'null'
         +',"creditDays":'+'null'+',"paymentDueDate":'+'null'+',"accDetail":'+'null'+',"tdsFlag":'+'null'+',"tranType":'+'"'+'O'+'"'
         + ',"subsupplyType":'+'"'+'TAX'+'"'+',"otherSupplyTypeDesc":'+'null'
         +',"transporterID":'+'null'
         +',"transporterName":'+'null'+',"transportMode":'+'null'+',"transportDocNo":'+'null'+',"transportDocDate":'+'null'
         +',"distance":'+'0'+',"vehicleNo":'+'null'
         +',"vehicleType":'+'null'+',"exchangeRt":'+'null'+',"companyCode":'+'null'+',"glPostingDate":'+'null'+',"salesOrderNo":'+'null'
         +',"custTan":'+CustomerTAN + ', "canReason" :' + 'null' + ',"canRemarks" :' + 'null'+',"invStateCessSpecificAmt":'+'0'
         +',"tcsFlagIncomeTax":'+'null' +',"custPANOrAadhaar":'+CustomerPANOrAadhaar +',"glStateCessSpecific":'+'null'
         +',"glCodeIgst":'+'null'
         +',"glCodeCgst":'+'null'+',"glCodeSgst":'+'null'+',"glCodeAdvCess":'+'null'+',"glCodeSpCess":'+'null'+',"glCodeStateCess":'+'null'
         +',"location":'+'null'+',"division":'+'null'+',"salesOrg":'+'null'+',"distChannel":'+'null'+',"profitCentre1":'+'null'+',"profitCentre2":'+'null'
         +',"invRemarks":'+'null'
         +',"preDocDtls":['+PreDOC+']'
         +',"contrDtls":['+ConDetail+']'
         +',"addlDocDtls":['+addDoc+']'
         +',"lineItems":['+ProdList+']'
         +',"attribDtls":['+attrDetail+']'
         +'}] }';


      MESSAGE('Generate E-Invoice : %1',GenerateJSON);


      //KH 040521 BEGIN
      recSaleRecSetup.GET;
      AuthURL            := recSaleRecSetup."E-way & E-Inv Auth. URL" ;
      GenIRNURL          := recSaleRecSetup."E-Invoice Generate IRN URL" ;
      AuthUserName       := recSaleRecSetup."E-way & E-Inv User ID";
      AuthPassword       := recSaleRecSetup."E-way & E-Inv Password" ;
      APIAccessKey       := recSaleRecSetup."E-way & E-Inv API Key";



      GenIRN             :=  GenIRN.EInvoicing();
      ResponseStr        :=  GenIRN.GenerareIRN(AuthURL,GenIRNURL,AuthUserName, AuthPassword , APIAccessKey ,GenerateJSON ) ;
      MESSAGE (ResponseStr);
      GetString          :=  COPYSTR(ResponseStr,1,1);

      IF GetString = '1' THEN BEGIN
      SelectString := CONVERTSTR(ResponseStr,'|',',');
      //MESSAGE(SelectString);
      DocNo              := SELECTSTR(3,SelectString);
      IRNNo              := SELECTSTR(7,SelectString);
      AckNo              := SELECTSTR(5,SelectString);
      AcKDate            := SELECTSTR(6,SelectString);
      QRCode             := SELECTSTR(8,SelectString);
      END;

       IF GetString = '0' THEN BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Failure';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;
              rec."E-Invoice IRN Status" := 'Failure' ;
              rec.MODIFY;
            END ELSE
            BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Success';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;

              rec."E-Invoice IRN No"  := IRNNo ;
              rec."E-Invoice Acknowledge No." := AckNo ;
              rec."E-Invoice Acknowledge Date" := AcKDate ;
              rec."E-Invoice Status" := 'Success';
              rec."E-Invoice IRN Status" := 'Success' ;
              rec.MODIFY;
             IF QRCode <> '' THEN BEGIN
              QRCodeManagement(DocNo,QRCode,IRNNo);
             END;

          END;
      //KH 040521 END
    END;

    PROCEDURE GenerateJSONforSalesCM@1000000001(rec@1000000000 : Record 50053);
    VAR
      recSalesCMHeader@1000000001 : Record 114;
      recSalesCMLine@1000000002 : Record 115;
    BEGIN
      GenerateJSON := '';
      SNum := 0; //KH170221
      SupplyType := '';
      Typ := '';
      Dt := '';
      ReturnPeriod := '';
      OrgInvNo := '';
      CurrencyCode := '';
      DocCateg := '';
      TaxScheme := '';
      SupplierGSTIN := '';
      SupplierTradeName := '';
      SupplierLegalName := '';
      SupplierAddress1 := '';
      SupplierAddress2 := '';
      SupplierLocation := '';
      SupplierPinCode := '';
      SupplierPhone := 'null'; //kh170221
      SupplierEmail := 'null'; //kh170221
      CustomerTAN := 'null'; //kh170221
      Statename := '';
      CustomerGSTIN := '';
      CustomerPANOrAadhaar := 'null';
      CountryCode :='';
      CustomerTradeName := '';
      CustomerLegalName := '';
      CustomerAddress1 := '';
      CustomerAddress2 := '';
      CustomerLocation := '';
      CustomerPincode :='';
      TransType := '';
      Distance :='';
      VehicleNo := '';
      VehicleType :='';
      PaymentTerms :='null';
      CustomerCode :='';
      CustomerType := 'null'; //KH170221
      CustomerStateCode := '';
      CustomerPhone := '';
      CustomerEmail := 'null';//KH170221
      DispatcherGSTIN := '';
      DispatcherTradeName := '';
      DispatcherAddress1 := '';
      DispatcherAddress2 := '';
      DispatcherLocation := '';
      DispatcherPincode := 'null';
      DispatcherStateCode := '';
      ShipToGSTIN :=  'null';
      ShipToTradeName := '';
      ShipToLegalName := '';
      ShipToAddress1 := '';
      ShipToAddress2 := '';
      ShippingBillDate := '';
      ShipToLocation := '';
      ShipToPincode :=  '';
      ShipToStateCode := '';
      ShipToPhone := '';
      ShipToEmail := '';



      DocType := 'Sales Credit Memo';
      //SNum := 0;
      IGSTRate := 0;
      IGSTAmount := 0;
      CGSTRate := 0;
      CGSTAmount := 0;
      SGSTRate :=0;
      SGSTAmount := 0;
      QTY := 0;
      ProductNo := '' ;
      ProductDescription := '' ;
      HSN := '';
      UnitPrice := '';
      ItemAmount := '';
      ItemDiscount := '0';
      PreTaxAmount := '';
      Location := '';
      Isservice := '';
      CategoryOfProduct := '';
      InvoiceValueFC := '';
      InvoicePeriodStartDate := '';
      InvoicePeriodEndDate := '';
      UQC := '';
      TotalItemAmount := 0;
      ItemOtherCharges := 0;
      ItemAssessableAmount := 0;

      recSalesCMHeader.RESET;
      recSalesCMHeader.SETRANGE("No.",rec."No.");
      IF recSalesCMHeader.FIND('-') THEN BEGIN

      IF recSalesCMHeader."GST Customer Type" IN [recSalesCMHeader."GST Customer Type"::Unregistered,recSalesCMHeader."GST Customer Type"::" "]
          THEN
          ERROR(UnRegCusrErr);
        UsersID := recSalesCMHeader."User ID"; //KH170221
        Typ := 'CR';
        Dt := FORMAT(recSalesCMHeader."Posting Date",0,'<Year4>-<Month,2>-<Day,2>');
        ReturnPeriod := FORMAT(recSalesCMHeader."Posting Date",0,'<Month,2><Year4>');
        OrgInvNo := recSalesCMHeader."No.";
         //KH040121 BEGIN
         IF recSalesCMHeader."Currency Code" <> '' THEN BEGIN
            CurrencyCode := recSalesCMHeader."Currency Code"
         END ELSE
            CurrencyCode := 'INR';
       //KH040121 END
         IF recSalesCMHeader."Ship-to Code" <> '' THEN BEGIN
            DocCateg := 'SHP'
         END ELSE
            DocCateg := 'REG';

      IF recCust.GET(recSalesCMHeader."Bill-to Customer No.") THEN BEGIN
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             SupplyType := 'TAX';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             SupplyType := 'TAX';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
             recSalesCMLine.RESET;
             recSalesCMLine.SETRANGE("Document No.",recSalesCMHeader."No.");
             IF recSalesCMLine.FIND('-') THEN BEGIN
             REPEAT
             TaxAmount += recSalesCMLine."Total GST Amount";
             UNTIL recSalesCMLine.NEXT = 0;
             END;
            IF TaxAmount <> 0 THEN
             SupplyType := 'EXPT'
             ELSE
             SupplyType := 'EXPWT';
          END;

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
             SupplyType := 'EXT';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             SupplyType := 'DXP';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             TaxScheme := 'GST';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             TaxScheme := 'NEINV';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
             TaxScheme := 'GST';
          END;
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
             TaxScheme := 'NEINV';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             TaxScheme := 'GST';
      END;


      //    SupplierGSTIN := recSalesCMHeader."Location GST Reg. No.";
          CompanyInformationBuff.GET;
          LocationBuff.GET(recSalesCMHeader."Location Code");
          SupplierGSTIN := LocationBuff."GST Registration No."; //KH040121
          SupplierTradeName := 'Draeger India Pvt Ltd.';
          SupplierLegalName := 'Draeger India Pvt Ltd.';
          SupplierAddress1 := LocationBuff.Address;
          SupplierAddress2 := LocationBuff."Address 2";
          Flno := '';
          SupplierLocation := LocationBuff.City;
          Dst := LocationBuff.City;
          SupplierPinCode := COPYSTR(LocationBuff."Post Code",1,6);
          StateBuff.GET(LocationBuff."State Code");
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          recState.RESET;
          recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
            IF recState.FIND('-') THEN BEGIN
            Statename := recState.Description;
            END;
          SupplierPhone := '"'+COPYSTR(LocationBuff."Phone No.",1,10)+'"'; //KH170221
          SupplierEmail := '"'+COPYSTR(LocationBuff."E-Mail",1,50)+'"';//KH170221

      //For customer detail
         // recLoc.GET(recSalesInvHeader."Location Code");
          recCust.GET(recSalesCMHeader."Bill-to Customer No.");
          CustomerTAN := '"'+recCust."T.A.N No."+'"';  //KH040121 //kh170221
          CustomerGSTIN := recCust."GST Registration No.";//KH040121
          CustomerPANOrAadhaar := '"'+recCust."P.A.N. No."+'"'; //KH040121 //kh170221
          CountryCode  := recCust."Country/Region Code"; //KH040121
          CustomerTradeName := recSalesCMHeader."Bill-to Name";
          CustomerLegalName := recSalesCMHeader."Bill-to Name";
          CustomerAddress1 := recSalesCMHeader."Bill-to Address";
          CustomerAddress2 := recSalesCMHeader."Bill-to Address 2";
          IF CustomerAddress2 = '' THEN
          CustomerAddress2 := 'null';
          Flno := '';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN
          CustomerLocation := 'null'
          ELSE
          CustomerLocation := recSalesCMHeader."Bill-to City";
          Dst := recSalesCMHeader."Bill-to City";
          IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
          CustomerPincode := '999999'
          ELSE
          CustomerPincode := COPYSTR(recSalesCMHeader."Bill-to Post Code",1,6);
          //TransactionType := recSalesInvHeader."Transaction Type";
          TransType := FORMAT(recSalesCMHeader."Transaction Type");//kh040121
      //    Distance := FORMAT(recSalesCMHeader."Distance (Km)");
          VehicleNo := '';
      //    VehicleType := FORMAT(recSalesCMHeader."Vehicle Type");
          CustomerCode :=recSalesCMHeader."Bill-to Customer No.";
         // CustomerType := '';
          recSalesCMLine.SETRANGE("Document No.",recSalesCMHeader."No.");
          recSalesCMLine.SETFILTER(Quantity,'<>%1',0);
          IF recSalesCMLine.FINDFIRST THEN
            IF recSalesCMLine."GST Place of Supply" = recSalesCMLine."GST Place of Supply"::"Bill-to Address" THEN BEGIN
              IF NOT (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN BEGIN
                StateBuff.GET(recSalesCMHeader."GST Bill-to State Code");
                CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
              END ELSE
                CustomerStateCode := '96';
              recCust.RESET();
              recCust.SETRANGE("No.",recSalesCMHeader."Sell-to Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      Statename := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    Statename := '';

              IF Contact.GET(recSalesCMHeader."Bill-to Contact No.") THEN BEGIN
                CustomerPhone := COPYSTR(Contact."Phone No.",1,10);
                CustomerEmail := '"'+COPYSTR(Contact."E-Mail",1,50)+'"'; //KH170221
              END ELSE BEGIN
                  IF recCust.GET(recSalesCMHeader."Sell-to Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"';//KH170221
                  END;
              END;
            END ELSE
              IF recSalesCMLine."GST Place of Supply" = recSalesCMLine."GST Place of Supply"::"Ship-to Address" THEN BEGIN
                IF NOT (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN BEGIN
                  StateBuff.GET(recSalesCMHeader."GST Ship-to State Code");
                  CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
                END ELSE
                  CustomerStateCode := '96';
              recCust.RESET();
              recCust.SETRANGE("No.",recSalesCMHeader."Sell-to Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      Statename := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    Statename := '';

                IF ShipToAddr.GET(recSalesCMHeader."Sell-to Customer No.",recSalesCMHeader."Ship-to Code") THEN BEGIN
                  CustomerPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
                  CustomerEmail := '"'+COPYSTR(ShipToAddr."E-Mail",1,50)+'"'; //KH170221
                END ELSE BEGIN
                  IF recCust.GET(recSalesCMHeader."Sell-to Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"'; //KH170221
                  END;
                END;
              END ELSE BEGIN
                CustomerStateCode := '';
                CustomerPhone := '';
                CustomerEmail := 'null';
              END;

      //FOR Dispatch

          recLoc.GET(recSalesCMHeader."Location Code");
          DispatcherGSTIN := recLoc."GST Registration No.";
          DispatcherTradeName := recLoc.Name;
          DispatcherAddress1 := recLoc.Address;
          DispatcherAddress2 := recLoc."Address 2";
          DispatcherLocation := recLoc.City;
          DispatcherPincode := recLoc."Post Code";
          recState.RESET();
          recState.SETRANGE(Code,recLoc."State Code");
            IF recState.FIND('-') THEN
              DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //For Ship detail

          IF recSalesCMHeader."Ship-to Code" <> '' THEN BEGIN
            recLoc.GET(recSalesCMHeader."Location Code");
            ShipToAddr.GET(recSalesCMHeader."Sell-to Customer No.",recSalesCMHeader."Ship-to Code");
            ShipToGSTIN := '"'+ShipToAddr."GST Registration No."+'"';//KH170221
            ShipToTradeName := recSalesCMHeader."Ship-to Name";
            ShipToLegalName := recSalesCMHeader."Ship-to Name";
            ShipToAddress1 := recSalesCMHeader."Ship-to Address";
            ShipToAddress2 := recSalesCMHeader."Ship-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSalesCMHeader."Shipment Date");
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSalesCMHeader."Ship-to City";
            Dst := recSalesCMHeader."Ship-to City";
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSalesCMHeader."Ship-to Post Code",1,6);
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recSalesCMHeader."GST Ship-to State Code")THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
            ShipToEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
          END
          ELSE
          IF recSalesCMHeader."Ship-to Code" = '' THEN BEGIN
            //recLoc.GET(recSalesInvHeader."Location Code");
            recCust.GET(recSalesCMHeader."Sell-to Customer No.");
            ShipToGSTIN := '"'+recCust."GST Registration No."+'"'; //kh
            ShipToTradeName := recSalesCMHeader."Sell-to Customer Name";
            ShipToLegalName := recSalesCMHeader."Sell-to Customer Name";
            ShipToAddress1 := recSalesCMHeader."Sell-to Address";
            ShipToAddress2 := recSalesCMHeader."Sell-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSalesCMHeader."Shipment Date");
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSalesCMHeader."Sell-to City";
            Dst := recSalesCMHeader."Sell-to City";
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSalesCMHeader."Sell-to Post Code",1,6);
            IF (recSalesCMHeader."GST Customer Type" = recSalesCMHeader."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recCust."State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(recCust."Phone No.",1,10);
            ShipToEmail := COPYSTR(recCust."E-Mail",1,50);
          END;
        END;

          InvoiceValue := 0;
          InvoiceOtherCharges := 0;
          InvoiceAssessableAmount := 0;
          InvoiceIGSTAmount := 0;
          InvoiceCGSTAmount := 0;
          InvoiceSGSTAmount := 0;
          recSalesCMLine.RESET;
          recSalesCMLine.SETRANGE("Document No.",recSalesCMHeader."No.");
          IF recSalesCMLine.FIND('-') THEN BEGIN
          REPEAT
          //"Sales Invoice Line".CALCFIELDS("Charges To Customer");
          IF recSalesCMLine.Quantity <> 0 THEN BEGIN
          InvoiceOtherCharges += recSalesCMLine."TDS/TCS Amount";
          END;
          InvoiceAssessableAmount += (recSalesCMLine."Line Amount" - recSalesCMLine."Line Discount Amount" + recSalesCMLine."Charges To Customer");
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceIGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceCGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceSGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          UNTIL recSalesCMLine.NEXT = 0;
          END;

       InvoiceValue := (InvoiceAssessableAmount + InvoiceIGSTAmount + InvoiceCGSTAmount + InvoiceSGSTAmount + InvoiceOtherCharges);

        //For Item

        recSalesCMLine.RESET;
        recSalesCMLine.SETRANGE("Document No.",recSalesCMHeader."No.");
        recSalesCMLine.SETFILTER(Quantity,'<>%1',0);
        recSalesCMLine.SETFILTER("No.",'<>%1','44491050');
        IF recSalesCMLine.FIND('-') THEN BEGIN
        REPEAT
        {
          IF recSalesCMLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recSalesCMLine.COUNT);
         }
          lineitem := '';
          IF recSalesCMLine."GST Group Type" = recSalesCMLine."GST Group Type"::Goods THEN BEGIN
              Isservice := 'N';
          END ELSE BEGIN
          Isservice := 'Y';
          END;
          SNum += 1;
          ProductNo := recSalesCMLine."No.";
          ProductDescription :=recSalesCMLine.Description;
          HSN := COPYSTR(recSalesCMLine."HSN/SAC Code",1,8);
          QTY := recSalesCMLine.Quantity;
          UnitPrice := FORMAT(ROUND(recSalesCMLine."Unit Price",0.01,'>'));//Arvind010323
          ItemAmount :=   FORMAT(recSalesCMLine."Line Amount" - recSalesCMLine."Line Discount Amount" + recSalesCMLine."Charges To Customer");
          ItemDiscount := FORMAT(recSalesCMLine."Line Discount Amount");
          PreTaxAmount := FORMAT(recSalesCMLine."Line Amount");
          Location := recSalesCMLine."Location Code";
          CategoryOfProduct := recSalesCMLine."Item Category Code";
          InvoiceValueFC := FORMAT(recSalesCMLine."Amount To Customer");
          ItemOtherCharges := (recSalesCMLine."Charges To Customer" + recSalesCMLine."Line Amount");
          recIUOM.RESET;
          recIUOM.SETRANGE(Code,recSalesCMLine."Unit of Measure Code");
          IF recIUOM.FIND('-') THEN BEGIN
             recUOM.RESET;
             recUOM.SETRANGE(Code,recIUOM.Code);
             IF recUOM.FIND('-') THEN BEGIN
             UQC := recUOM.Description2
             END ELSE
             UQC := 'OTH';
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := (recDGLE."GST %");
             IGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSalesCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSalesCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;

        TotalItemAmount := (recSalesCMLine."Line Amount" - recSalesCMLine."Line Discount Amount" + recSalesCMLine."Charges To Customer" + IGSTAmount + CGSTAmount + SGSTAmount );
        ItemAssessableAmount := (recSalesCMLine."Line Amount" - recSalesCMLine."Line Discount Amount" + recSalesCMLine."Charges To Customer");
          lineitem := '{"itemNo":'+FORMAT(SNum)+',"glCodeTaxableVal":'+'null'+',"supplyType":'+'"'+SupplyType+'"'+',"fob":'+FORMAT(SNum)+',"exportDuty":'+'0'
          + ',"hsnsacCode":' + '"'+HSN+'"'+',"ProductCode":' +'"'+ ProductNo+'"'+ ',"itemDesc":' +'"'+ ProductDescription+'"'+ ',"itemType":'+'"'+CategoryOfProduct+'"'
          + ',"itemUqc":'+'"'+UQC+'"'+',"itemQty":'+DELCHR(FORMAT(QTY),'=',',')+',"taxableVal":'+DELCHR(FORMAT(ItemAssessableAmount),'=',',')
          +',"igstRt":'+DELCHR(FORMAT(IGSTRate),'=',',')+',"igstAmt":'+DELCHR(FORMAT(IGSTAmount),'=',',')+',"cgstRt":'+DELCHR(FORMAT(CGSTRate),'=',',')
          +',"cgstAmt":'+DELCHR(FORMAT(CGSTAmount),'=',',')
          +',"sgstRt":'+DELCHR(FORMAT(SGSTRate),'=',',')+',"sgstAmt":'+DELCHR(FORMAT(SGSTAmount),'=',',')
          +',"cessRtAdvalorem":'+'0'+',"cessAmtAdvalorem":'+'0'+',"cessRtSpecific":'+'0'+',"cessAmtSpecific":'+'0'+',"stateCessRt":'+'0'+',"stateCessAmt":'+'0'
          + ',"otherValues":'+'0'+',"lineItemAmt":'+DELCHR(FORMAT(InvoiceValue),'=',',')+',"tcsAmt":'+'0'
          +',"itcFlag":'+'null'+',"crDrReason":'+'null'+',"plantCode":'+'null'
          +',"serialNoII":'+'null' +',"ProductName":'+'null'+',"isService":' +'"'+ Isservice +'"'
          +',"barcode":'+'null'+',"batchNameOrNo":'+'null'+',"batchExpiryDate":'+'null'+',"warrantyDate":'+'null'
          +',"originCountry":'+'null' +',"freeQuantity":'+'0'
          +',"unitPrice":'+DELCHR(UnitPrice,'=',',')+',"itemAmt":'+DELCHR(ItemAmount,'=',',')+',"itemDiscount":'+DELCHR(ItemDiscount,'=',',')
          +',"preTaxAmt":'+DELCHR(PreTaxAmount,'=',',')
          +',"totalItemAmt":'+DELCHR(FORMAT(TotalItemAmount),'=',',')
          +',"orderLineRef":'+'null'+',"tcsCgstAmt":'+'null'+',"tcsSgstAmt":'+'null'
          +',"tdsIgstAmt":'+'0'+',"tdsCgstAmt":'+'0'+',"tdsSgstAmt":'+'0'+',"subDivision":'+'null'
          +',"udf1":'+'null'
          +',"udf2":'+'null'+',"udf3":'+'null'
          +',"udf4":'+'null'+',"udf5":'+'null'+',"udf6":'+'null'+',"udf7":'+'null'+',"udf8":'+'null'+',"udf9":'+'null'+',"udf10":'+'null'+',"udf11":'+'null'
          +',"udf12":'+'null'+',"udf13":'+'null'+',"udf14":'+'null'+',"udf15":'+'null'+',"udf16":'+'null'+',"udf17":'+'null'+',"udf18":'+'null'+',"udf19":'+'null'
          +',"udf20":'+'null'+',"udf21":'+'null'+',"udf22":'+'null'+',"udf23":'+'null'+',"udf24":'+'null'+',"udf25":'+'null'+',"udf26":'+'null'+',"udf27":'+'null'
          +',"udf28":'+'null'+',"udf29":'+'null'+',"udf30":'+'null'+',"ecomTransactionID":'+'null'
          +',"stateCessSpecificRt":'+'0'+',"stateCessSpecificAmt":'+'0'+',"tcsRtIncomeTax":'+'0'+',"tcsAmtIncomeTax":'+'0'+',"docRefNo":'+'null'+',"paidAmt":'+'0'+',"balanceAmt":'+'0'
          +',"profitCentre3":'+'null'+',"profitCentre4":'+'null'+',"profitCentre5":'+'null'
          +',"profitCentre6":'+'null'+',"profitCentre7":'+'null'+',"profitCentre8":'+'null'
          +'},' ;
          Itemlist += lineitem ;
        UNTIL recSalesCMLine.NEXT=0;
        END;
        //Where := '>' ;
       // Which := ',' ;
        ProdList := DELCHR(Itemlist,'>',',');

        PreDOC := '{"preceedingInvNo":'+'null'+',"preccedingInvDate":'+'null'+',"invRef":'+'null'+'}';
        ConDetail :='{"receiptAdviceRef":'+'null'+',"receiptAdviceDate":'+'null'+',"tenderRef":'+'null'+',"contractRef":'+'null'+',"externalRef":'+'null'+',"projectRef":'+'null'+',"custPoRefNo":'+'null'+',"custPoRefDate":'+'null'+'}';
        addDoc := '{"supportingDocURL":'+'null'+',"supportingDocBase64":'+'null'+',"addlInfo":'+'null'+'}';
        attrDetail := '{"attributeName":'+'null'+',"attributeValue":'+'null'+'}';

      GenerateJSON := '{ "req" :[  { "userId":'+'null'+',"srcFileName":'+'null'+',"srcIdentifier":'+'null'+',"returnPeriod":'+'"'+ReturnPeriod+'"'+ ',"suppGstin":'+ '"'+SupplierGSTIN+'"'
         + ',"docType" :'+ '"'+Typ+'"' + ',"docNo" :' + '"'+OrgInvNo+'"' +',"docDate":'+ '"'+Dt+'"'+',"orgDocType":'+'"'+'INV'+'"'+',"crDRPreGst":'+'null'
         +',"custGstin":'+ '"'+CustomerGSTIN+'"'+',"custOrSupType":'+CustomerType+',"diffPercent":'+'null'+',"orgCgstin":'+'"'+CustomerGSTIN+'"'
         +',"custOrSupName":'+'"'+CustomerLegalName+'"'+',"custOrSupCode":'+'"'+CustomerCode+'"'+',"custOrSupAddr1":'+'"'+CustomerAddress1+'"'
         +',"custOrSupAddr2":'+ '"'+CustomerAddress2+'"'+',"custOrSupAddr4":'+ '"'+CustomerLocation+'"'+',"billToState":'+'"'+CustomerStateCode+'"'
         +',"shipToState":'+'"'+ShipToStateCode+'"'+',"pos":'+'"'+CustomerStateCode+'"'+',"stateApplyingCess":'+'null'+',"portCode":'+'null'
         +',"shippingBillNo":'+'null'+',"shippingBillDate":'+'"'+ShippingBillDate+'"'+ ',"sec7OfIgstFlag":'+ 'null'
         + ',"reverseCharge":'+'null'+',"tcsFlag":'+'null'+',"ecomGSTIN":'+'null'+',"claimRefundFlag":'+'null'+',"autoPopToRefundFlag":'+'null'
         +',"accVoucherNo":'+'null'+',"accVoucherDate":'+'null'+',"ewbNo":'+'null'+',"ewbDate":'+'null'
         +',"irn" :' + 'null' + ',"irndate" :' + 'null'
         + ', "taxScheme" :' + '"'+TaxScheme+'"' + ',"docCat":'+ '"'+DocCateg+'"'+',"supTradeName":'+ '"'+SupplierTradeName+'"' + ',"supLegalName":'+ '"'+SupplierLegalName+'"'
         + ',"supBuildingNo":'+'"'+SupplierAddress1+'"'+',"supBuildingName":'+'"'+SupplierAddress2+'"'+',"supLocation":'+ '"'+SupplierLocation+'"' +',"supPincode":'+'"'+ SupplierPinCode+'"'
         +',"supStateCode":'+ '"'+SupplierStateCode+'"' +',"supPhone":'+'null'+',"supEmail":'+'null'
         +',"custTradeName":'+ '"'+CustomerTradeName+'"'+',"custLegalName":'+ '"'+CustomerTradeName+'"'+',"custPincode":'+'"'+CustomerPincode+'"'
         +',"custPhone":'+'null'+',"custEmail":'+'null'
         +',"dispatcherGSTIN":'+'"'+DispatcherGSTIN+'"'+',"dispatcherTradeName":'+'"'+DispatcherTradeName+'"'
         +',"dispatcherBuildingNo":'+'"'+DispatcherAddress1+'"'+',"dispatcherBuildingName":'+'"'+DispatcherAddress1+'"'+',"dispatcherLocation":'+'"'+DispatcherLocation+'"'
         +',"dispatcherPincode":'+DispatcherPincode+',"dispatcherStateCode":'+'"'+DispatcherStateCode+'"'
         +',"shipToGstin":'+ShipToGSTIN+',"shipToTradeName":'+'"'+ ShipToTradeName+'"'
         +',"shipToLegalName":'+'"'+ShipToLegalName+'"'+',"shipToBuildingNo":'+'"'+ShipToAddress1+'"'+',"shipToBuildingName":'+'"'+ShipToAddress1+'"'+',"shipToLocation":'+'"'+ShipToLocation+'"'
         +',"shipToPincode":'+'"'+ShipToPincode+'"'+',"invOtherCharges":'+'"0"'+',"invAssessableAmt":'+DELCHR(FORMAT(InvoiceAssessableAmount),'=',',')
         +',"invIgstAmt":'+DELCHR(FORMAT(InvoiceIGSTAmount),'=',',')
         +',"invCgstAmt":'+DELCHR(FORMAT(InvoiceCGSTAmount),'=',',')+',"invSgstAmt":'+DELCHR(FORMAT(InvoiceSGSTAmount),'=',',')+',"invCessAdvaloremAmt":'+'0'
         +',"invCessSpecificAmt":'+'0'+',"invStateCessAmt":'+'0'+',"roundOff":'+'0'+',"totalInvValueInWords":'+'null'
         +',"foreignCurrency":'+'"'+CurrencyCode+'"'+',"countryCode":'+'"'+CountryCode+'"'+',"invValueFc":'+DELCHR(InvoiceValueFC,'=',',')
         +',"invPeriodStartDate":'+'null'
         +',"invPeriodEndDate":'+'null'+',"payeeName":'+'null'+',"modeOfPayment":'+'null'+',"branchOrIfseCode":'+'null'+',"paymentTerms":'+'"'+PaymentTerms+'"'
         +',"paymentInstruction":'+'null'+',"creditTransfer":'+'null'+',"directDebit":'+'null'
         +',"creditDays":'+'null'+',"paymentDueDate":'+'null'+',"accDetail":'+'null'+',"tdsFlag":'+'null'+',"tranType":'+'"'+'O'+'"'
         + ',"subsupplyType":'+'"'+'TAX'+'"'+',"otherSupplyTypeDesc":'+'null'
         +',"transporterID":'+'null'
         +',"transporterName":'+'null'+',"transportMode":'+'null'+',"transportDocNo":'+'null'+',"transportDocDate":'+'null'
         +',"distance":'+'0'+',"vehicleNo":'+'null'
         +',"vehicleType":'+'null'+',"exchangeRt":'+'null'+',"companyCode":'+'null'+',"glPostingDate":'+'null'+',"salesOrderNo":'+'null'
         +',"custTan":'+CustomerTAN + ', "canReason" :' + 'null' + ',"canRemarks" :' + 'null'+',"invStateCessSpecificAmt":'+'0'
         +',"tcsFlagIncomeTax":'+'null' +',"custPANOrAadhaar":'+CustomerPANOrAadhaar +',"glStateCessSpecific":'+'null'
         +',"glCodeIgst":'+'null'
         +',"glCodeCgst":'+'null'+',"glCodeSgst":'+'null'+',"glCodeAdvCess":'+'null'+',"glCodeSpCess":'+'null'+',"glCodeStateCess":'+'null'
         +',"location":'+'null'+',"division":'+'null'+',"salesOrg":'+'null'+',"distChannel":'+'null'+',"profitCentre1":'+'null'+',"profitCentre2":'+'null'
         +',"invRemarks":'+'null'
         +',"preDocDtls":['+PreDOC+']'
         +',"contrDtls":['+ConDetail+']'
         +',"addlDocDtls":['+addDoc+']'
         +',"lineItems":['+ProdList+']'
         +',"attribDtls":['+attrDetail+']'
         +'}] }';


      MESSAGE('Generate E-Invoice : %1',GenerateJSON);

      //KH 040521 BEGIN
      recSaleRecSetup.GET;
      AuthURL            := recSaleRecSetup."E-way & E-Inv Auth. URL" ;
      GenIRNURL          := recSaleRecSetup."E-Invoice Generate IRN URL" ;
      AuthUserName       := recSaleRecSetup."E-way & E-Inv User ID";
      AuthPassword       := recSaleRecSetup."E-way & E-Inv Password" ;
      APIAccessKey       := recSaleRecSetup."E-way & E-Inv API Key";



      GenIRN             :=  GenIRN.EInvoicing();
      ResponseStr        :=  GenIRN.GenerareIRN(AuthURL,GenIRNURL,AuthUserName, AuthPassword , APIAccessKey ,GenerateJSON ) ;
      MESSAGE (ResponseStr);
      GetString          :=  COPYSTR(ResponseStr,1,1);

      IF GetString = '1' THEN BEGIN
      SelectString := CONVERTSTR(ResponseStr,'|',',');
      //MESSAGE(SelectString);
      DocNo              := SELECTSTR(3,SelectString);
      IRNNo              := SELECTSTR(7,SelectString);
      AckNo              := SELECTSTR(5,SelectString);
      AcKDate            := SELECTSTR(6,SelectString);
      QRCode             := SELECTSTR(8,SelectString);
      END;

       IF GetString = '0' THEN BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Failure';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;
              rec."E-Invoice IRN Status" := 'Failure' ;
              rec.MODIFY;
            END ELSE
            BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Success';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;

              rec."E-Invoice IRN No"  := IRNNo ;
              rec."E-Invoice Acknowledge No." := AckNo ;
              rec."E-Invoice Acknowledge Date" := AcKDate ;
              rec."E-Invoice Status" := 'Success';
              rec."E-Invoice IRN Status" := 'Success' ;
              rec.MODIFY;
              IF QRCode <> '' THEN BEGIN
              QRCodeManagement(DocNo,QRCode,IRNNo);
             END;

          END;
      //KH 040521 END
    END;

    PROCEDURE CancelEinvoiceJSON@1000000004(rec@1000000000 : Record 50053);
    VAR
      recSalesInvHeader@1000000002 : Record 112;
      recSalesInvLine@1000000001 : Record 113;
    BEGIN
      EWayBillandEinvoice.RESET();
      EWayBillandEinvoice.SETRANGE("No.",rec."No.");
        IF EWayBillandEinvoice.FIND('-') THEN BEGIN
          recLocTable.RESET();
          recLocTable.SETRANGE(Code,EWayBillandEinvoice."Location Code");
            IF recLocTable.FIND('-') THEN BEGIN
            recGSTRegNo.RESET();
            recGSTRegNo.SETRANGE(Code,recLocTable."GST Registration No.");
              IF recGSTRegNo.FIND('-') THEN BEGIN
          IF (EWayBillandEinvoice."Transaction Type"= 'Sales Invoice') OR (EWayBillandEinvoice."Transaction Type"= 'Service Invoice') THEN
             Typ := 'INV';
            IF (EWayBillandEinvoice."Transaction Type"= 'Sales Credit Memo') THEN
             Typ := 'CRN';

      GenerateJSON := '{ "req" :[  {  "irn" :' + '"'+rec."E-Invoice IRN No"+'"' + ',"suppGstin" :' + '"'+recLocTable."GST Registration No."+'"' + ', "docType" :' + '"'+ Typ+'"' + ', "docNo" :' + '"'+rec."No."+'"'
          + ',"docDate" :' + '"'+FORMAT(rec."Posting Date")+'"'
          + ',"canRemarks":'+ '"'+rec."E-Invoice Cancel Remarks"+'"'
          + ',"canReason" :'+ '"'+FORMAT(rec."E-Invoice Cancel Reason")+'"' + '}';
              //kh
            MESSAGE('Generate E-Invoice : %1',GenerateJSON);
       END;
       END;
       END;
    END;

    PROCEDURE GenerateJSONforTransferShip@1000000002(rec@1000000002 : Record 50053);
    VAR
      recTranShipHdr@1000000000 : Record 5744;
      recTranShipLine@1000000001 : Record 5745;
    BEGIN

      GenerateJSON := '';
      SNum := 0; //KH170221
      SupplyType := '';
      Typ := '';
      Dt := '';
      ReturnPeriod := '';
      OrgInvNo := '';
      CurrencyCode := '';
      DocCateg := '';
      TaxScheme := '';
      SupplierGSTIN := '';
      SupplierTradeName := '';
      SupplierLegalName := '';
      SupplierAddress1 := '';
      SupplierAddress2 := '';
      SupplierLocation := '';
      SupplierPinCode := '';
      Statename := '';
      SupplierPhone := 'null'; //kh170221
      SupplierEmail := 'null'; //kh170221
      CustomerTAN := 'null'; //kh170221
      CustomerGSTIN := '';
      CustomerPANOrAadhaar := 'null';
      CountryCode :='';
      CustomerTradeName := '';
      CustomerLegalName := '';
      CustomerAddress1 := '';
      CustomerAddress2 := '';
      CustomerLocation := '';
      CustomerPincode :='';
      TransType := '';
      Distance :='';
      VehicleNo := '';
      VehicleType :='';
      PaymentTerms :='null';
      CustomerCode :='';
      CustomerType := 'null'; //KH170221
      CustomerStateCode := '';
      CustomerPhone := '';
      CustomerEmail := 'null';//KH170221
      DispatcherGSTIN := '';
      DispatcherTradeName := '';
      DispatcherAddress1 := '';
      DispatcherAddress2 := '';
      DispatcherLocation := '';
      DispatcherPincode := 'null';
      DispatcherStateCode := '';
      ShipToGSTIN :=  'null';
      ShipToTradeName := 'null';
      ShipToLegalName := 'null';
      ShipToAddress1 := 'null';
      ShipToAddress2 := 'null';
      ShippingBillDate := 'null';
      ShipToLocation := 'null';
      ShipToPincode :=  'null';
      ShipToStateCode := 'null';
      ShipToPhone := '';
      ShipToEmail := '';

      DocType := 'Transfer Shipment';
      IGSTRate := 0;
      IGSTAmount := 0;
      CGSTRate := 0;
      CGSTAmount := 0;
      SGSTRate :=0;
      SGSTAmount := 0;
      QTY := 0;
      ProductNo := '' ;
      ProductDescription := '' ;
      HSN := '';
      UnitPrice := '';
      ItemAmount := '';
      ItemDiscount := '0';
      PreTaxAmount := '';
      Location := '';
      Isservice := '';
      CategoryOfProduct := '';
      InvoiceValueFC := '';
      InvoicePeriodStartDate := '';
      InvoicePeriodEndDate := '';
      UQC := '';
      TotalItemAmount := 0;
      ItemOtherCharges := 0;
      ItemAssessableAmount := 0;

      DocCateg := 'REG';
      recTranShipHdr.RESET();
      recTranShipHdr.SETRANGE("No.",rec."No.");
        IF recTranShipHdr.FIND('-') THEN BEGIN

      //Trans Dtl transShip
      UsersID := recTranShipHdr."Created by ID";
      catg := 'B2B';

      recDGLE.RESET();
      recDGLE.SETRANGE("Document No.",recTranShipHdr."No.");
      recDGLE.SETRANGE("Reverse Charge",TRUE);
        IF recDGLE.FIND('-') THEN
          RegRev := 'Y'
        ELSE
          RegRev := 'N';

       IgstIntra := 'N';
       TransType := FORMAT(recTranShipHdr."Transaction Type");//kh040121
      // Doc Dtl transShip
      TaxScheme := '';
      Typ := '';
      IF recLoc.GET(recTranShipHdr."Transfer-from Code") THEN
         txtLoc := recLoc."State Code";
      IF recLoc.GET(recTranShipHdr."Transfer-to Code") THEN
         TextLoc := recLoc."State Code";
       IF txtLoc <> TextLoc THEN BEGIN
         Typ := 'INV' ;
       END ELSE
         Typ := 'DLC';


       IF txtLoc <> TextLoc THEN BEGIN
         TaxScheme := 'GST';
       END ELSE
         TaxScheme := 'NEINV';

      Dt := FORMAT(recTranShipHdr."Posting Date",0,'<Year4>-<Month,2>-<Day,2>');
      ReturnPeriod := FORMAT(recTranShipHdr."Posting Date",0,'<Month,2><Year4>');
      OrgInvNo := recTranShipHdr."No.";

      SupplyType := 'TAX';

      // Seller Dtl TransShip
        CompanyInformationBuff.GET;
        SupplierTradeName := 'Draeger India Pvt Ltd.';
        SupplierLegalName := 'Draeger India Pvt Ltd.';
        IF LocationBuff.GET(recTranShipHdr."Transfer-from Code") THEN
        SupplierGSTIN := (LocationBuff."GST Registration No.");
        SupplierAddress1 := recTranShipHdr."Transfer-from Address";
        SupplierAddress2 := recTranShipHdr."Transfer-from Address 2";
        Flno := '';
        SupplierLocation := recTranShipHdr."Transfer-from City";
        Dst := recTranShipHdr."Transfer-from City";
        SupplierPinCode := COPYSTR(recTranShipHdr."Transfer-from Post Code",1,6);
        IF StateBuff.GET(LocationBuff."State Code") THEN BEGIN
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          Statename := StateBuff.Description;
        END
          ELSE BEGIN
            SupplierStateCode := '';
            Statename := '';
          END;
          SupplierPhone := '"'+COPYSTR(LocationBuff."Phone No.",1,10)+'"'; //KH170221
          SupplierEmail := '"'+COPYSTR(LocationBuff."E-Mail",1,50)+'"';//KH170221


      //Buyer Dtl TransShip
        recLoc.GET(recTranShipHdr."Transfer-to Code");
        CustomerGSTIN := recLoc."GST Registration No.";
        CustomerTradeName := recLoc.Name;
        CustomerLegalName := recLoc.Name;
        CustomerAddress1 := recTranShipHdr."Transfer-to Address";
        CustomerAddress2 := recTranShipHdr."Transfer-to Address 2";
        IF CustomerAddress2 = '' THEN
        CustomerAddress2 := 'null';
        Flno := '';
        IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN
        CustomerLocation := 'null'
        ELSE
        CustomerLocation := recTranShipHdr."Transfer-to City";
        Dst := recTranShipHdr."Transfer-to City";
        CustomerPincode := COPYSTR(recTranShipHdr."Transfer-to Post Code",1,6);
        VehicleNo := '';
      //  VehicleType := FORMAT(recTranShipHdr."Vehicle Type");
      //  PaymentTerms := '';
        CustomerCode :=recTranShipHdr."Bill-to Customer No.";
        //CustomerType := '';


        IF StateBuff.GET(recLoc."State Code") THEN BEGIN
          CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
          Statename := StateBuff.Description;
        END
          ELSE BEGIN
            CustomerStateCode := '';
            Statename := '';
          END;
          CustomerPhone := COPYSTR(recLoc."Phone No.",1,10);
          CustomerEmail := '"'+COPYSTR(recLoc."E-Mail",1,50)+'"';//KH170221

      //Dis Dtl TransShip
        recLoc.GET(recTranShipHdr."Transfer-from Code");
        CompanyInformationBuff.GET();
        DispatcherGSTIN :=  recLoc."GST Registration No.";
        DispatcherTradeName := 'Draeger India Pvt Ltd.';
        DispatcherAddress1 := recLoc.Address;
        DispatcherAddress2 := recLoc."Address 2";
        DispatcherLocation := recLoc.City;
        DispatcherPincode := recLoc."Post Code";
        recState.RESET();
        recState.SETRANGE(Code,recLoc."State Code");
          IF recState.FIND('-') THEN
            DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //Ship Dtl TransShip
      IF recTranShipHdr."Ship-to Customer No." <> '' THEN BEGIN
          recShiptoAdd1.RESET;
          recShiptoAdd1.SETRANGE("No.", recTranShipHdr."Ship-to Customer No.");
          IF recShiptoAdd1.FIND('-') THEN BEGIN
            IF recState.GET(recShiptoAdd1."State Code") THEN;
            ShipToGSTIN := '"'+recShiptoAdd1."GST Registration No."+'"';
            ShipToTradeName := '"'+recShiptoAdd1.Name+'"';
            ShipToLegalName := '"'+recShiptoAdd1.Name+'"';
            ShipToAddress1 := '"'+recShiptoAdd1.Address+'"';
            ShipToAddress2 := '"'+recShiptoAdd1."Address 2"+'"';
            Flno := '';
            IF recCountry.GET(recShiptoAdd1."Country/Region Code") THEN;
            ShippingBillDate := '"'+FORMAT(recTranShipHdr."Shipment Date")+'"';
            ShipToLocation := '"'+recShiptoAdd1.City+'"';
            ShipToPincode := '"'+COPYSTR(recShiptoAdd1."Post Code",1,6)+'"';
            ShipToStateCode := '"'+recState."State Code (GST Reg. No.)"+'"';
            Statename := recState.Description;
            ShipToPhone := '"'+COPYSTR(recShiptoAdd1."Phone No.",1,10)+'"';
            ShipToEmail := '"'+COPYSTR(recShiptoAdd1."E-Mail",1,50)+'"';//KH170221
            DocCateg := 'SHP';
          END;
      END;
      //DRGKH021122 BEGIN As request of Ashish and arvind
      {
      END ELSE
      BEGIN
          IF (recTranShipHdr."Bill-to Customer No." <> '') AND (recTranShipHdr."Ship-to Customer No." = '') THEN BEGIN
          recCustomerBill.RESET;
          recCustomerBill.SETRANGE("No.",recTranShipHdr."Bill-to Customer No.");
          IF recCustomerBill.FIND('-') THEN BEGIN
          IF recState.GET(recCustomerBill."State Code") THEN;
            ShipToGSTIN := '"'+recCustomerBill."GST Registration No."+'"';
            ShipToTradeName := recCustomerBill.Name;
            ShipToLegalName := recCustomerBill.Name;
            ShipToAddress1 := recCustomerBill.Address;
            ShipToAddress2 := recCustomerBill."Address 2";
            Flno := '';
            IF recCountry.GET(recCustomerBill."Country/Region Code") THEN;
            ShippingBillDate := FORMAT(recTranShipHdr."Shipment Date");
            ShipToLocation := recCustomerBill.City;
            ShipToPincode := COPYSTR(recCustomerBill."Post Code",1,6);
            ShipToStateCode := recState."State Code (GST Reg. No.)";
            Statename := recState.Description;
            ShipToPhone := COPYSTR(recCustomerBill."Phone No.",1,10);
            ShipToEmail := '"'+COPYSTR(recCustomerBill."E-Mail",1,50)+'"';//KH170221
          END;
      END ELSE
      BEGIN
        recLoc.GET(recTranShipHdr."Transfer-to Code");
        ShipToGSTIN := '"'+recLoc."GST Registration No."+'"';//KH170221
        ShipToTradeName := 'Draeger India Pvt Ltd.';
        ShipToLegalName := 'Draeger India Pvt Ltd.';
        ShipToAddress1 := recTranShipHdr."Transfer-to Address";
        ShipToAddress2 := recTranShipHdr."Transfer-to Address 2";
        Flno := '';
        ShippingBillDate := FORMAT(recTranShipHdr."Shipment Date");
        ShipToLocation := recTranShipHdr."Transfer-to City";
        Dst := recTranShipHdr."Transfer-to City";
        ShipToPincode := COPYSTR(recTranShipHdr."Transfer-to Post Code",1,6);
        IF StateBuff.GET(recLoc."State Code") THEN BEGIN
          ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
          Statename := recState.Description;
        END
          ELSE BEGIN
            ShipToStateCode := '';
            Statename := '';
          END;
        ShipToPhone := COPYSTR(recLoc."Phone No.",1,10);
        ShipToEmail := '"'+COPYSTR(recLoc."E-Mail",1,50)+'"';//KH170221
       END;
       END;
       }
      END;

          InvoiceValue := 0;
          InvoiceOtherCharges := 0;
          InvoiceAssessableAmount := 0;
          InvoiceIGSTAmount := 0;
          InvoiceCGSTAmount := 0;
          InvoiceSGSTAmount := 0;
          recTranShipLine.RESET;
          recTranShipLine.SETRANGE("Document No.",recTranShipHdr."No.");
          IF recTranShipLine.FIND('-') THEN BEGIN
          REPEAT
          //"Sales Invoice Line".CALCFIELDS("Charges To Customer");
          //InvoiceOtherCharges += recTranShipLine."Charges to Transfer";
          InvoiceAssessableAmount += (recTranShipLine."Charges to Transfer" + recTranShipLine.Amount);
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceIGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceCGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceSGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          UNTIL recTranShipLine.NEXT = 0;
          END;
        InvoiceValue := (InvoiceAssessableAmount + InvoiceIGSTAmount + InvoiceCGSTAmount + InvoiceSGSTAmount + InvoiceOtherCharges);

      //item dtl
        recTranShipLine.RESET;
        recTranShipLine.SETRANGE("Document No.",recTranShipHdr."No.");
        recTranShipLine.SETFILTER(Quantity,'<>%1',0);
        recTranShipLine.SETFILTER("Item No.",'<>%1','44491050');
        IF recTranShipLine.FIND('-') THEN BEGIN
        REPEAT
        {
          IF recTranShipLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recTranShipLine.COUNT);
         }
          lineitem := '';
          SNum += 1;
          ProductNo := recTranShipLine."Item No.";
          ProductDescription := recTranShipLine.Description;
          //UQC := "Unit of Measure Code";
          HSN := COPYSTR(recTranShipLine."HSN/SAC Code",1,8);
          QTY := recTranShipLine.Quantity;
          UnitPrice := FORMAT(ROUND(recTranShipLine."Unit Price",0.01,'>'));
          ItemAmount := FORMAT(recTranShipLine."Charges to Transfer" + recTranShipLine.Amount);

          //ItemDiscount := '';
          PreTaxAmount := FORMAT(recTranShipLine."GST Base Amount");
          Location := recTranShipLine."Transfer-from Code";
          CategoryOfProduct := recTranShipLine."Item Category Code";
          InvoiceValueFC := FORMAT(recTranShipLine."Total Amount to Transfer");
          Isservice := 'N';
          ItemOtherCharges := (recTranShipLine."Charges to Transfer" + recTranShipLine.Amount);

          recIUOM.RESET;
          recIUOM.SETRANGE(Code,recTranShipLine."Unit of Measure Code");
          IF recIUOM.FIND('-') THEN BEGIN
             recUOM.RESET;
             recUOM.SETRANGE(Code,recIUOM.Code);
             IF recUOM.FIND('-') THEN BEGIN
             UQC := recUOM.Description2
             END ELSE
             UQC := 'OTH';
          END;

          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := (recDGLE."GST %");
             IGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recTranShipLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recTranShipLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;

          TotalItemAmount := (recTranShipLine."Charges to Transfer" + recTranShipLine.Amount + IGSTAmount + CGSTAmount + SGSTAmount );
          ItemAssessableAmount := (recTranShipLine."Charges to Transfer" + recTranShipLine.Amount);
          lineitem := '{"itemNo":'+FORMAT(SNum)+',"glCodeTaxableVal":'+'null'+',"supplyType":'+'"'+SupplyType+'"'+',"fob":'+FORMAT(SNum)+',"exportDuty":'+'0'
          + ',"hsnsacCode":' + '"'+HSN+'"'+',"ProductCode":' +'"'+ ProductNo+'"'+ ',"itemDesc":' +'"'+ ProductDescription+'"'+ ',"itemType":'+'"'+CategoryOfProduct+'"'
          + ',"itemUqc":'+'"'+UQC+'"'+',"itemQty":'+DELCHR(FORMAT(QTY),'=',',')+',"taxableVal":'+DELCHR(FORMAT(ItemAssessableAmount),'=',',')
          +',"igstRt":'+DELCHR(FORMAT(IGSTRate),'=',',')+',"igstAmt":'+DELCHR(FORMAT(IGSTAmount),'=',',')+',"cgstRt":'+DELCHR(FORMAT(CGSTRate),'=',',')
          +',"cgstAmt":'+DELCHR(FORMAT(CGSTAmount),'=',',')
          +',"sgstRt":'+DELCHR(FORMAT(SGSTRate),'=',',')+',"sgstAmt":'+DELCHR(FORMAT(SGSTAmount),'=',',')
          +',"cessRtAdvalorem":'+'0'+',"cessAmtAdvalorem":'+'0'+',"cessRtSpecific":'+'0'+',"cessAmtSpecific":'+'0'+',"stateCessRt":'+'0'+',"stateCessAmt":'+'0'
          + ',"otherValues":'+'0'+',"lineItemAmt":'+DELCHR(FORMAT(InvoiceValue),'=',',')+',"tcsAmt":'+'0'
          +',"itcFlag":'+'null'+',"crDrReason":'+'null'+',"plantCode":'+'null'
          +',"serialNoII":'+'null' +',"ProductName":'+'null'+',"isService":' +'"'+ Isservice +'"'
          +',"barcode":'+'null'+',"batchNameOrNo":'+'null'+',"batchExpiryDate":'+'null'+',"warrantyDate":'+'null'
          +',"originCountry":'+'null' +',"freeQuantity":'+'0'
          +',"unitPrice":'+DELCHR(UnitPrice,'=',',')+',"itemAmt":'+DELCHR(ItemAmount,'=',',')+',"itemDiscount":'+DELCHR(ItemDiscount,'=',',')
          +',"preTaxAmt":'+DELCHR(PreTaxAmount,'=',',')
          +',"totalItemAmt":'+DELCHR(FORMAT(TotalItemAmount),'=',',')
          +',"orderLineRef":'+'null'+',"tcsCgstAmt":'+'null'+',"tcsSgstAmt":'+'null'
          +',"tdsIgstAmt":'+'0'+',"tdsCgstAmt":'+'0'+',"tdsSgstAmt":'+'0'+',"subDivision":'+'null'
          +',"udf1":'+'null'
          +',"udf2":'+'null'+',"udf3":'+'null'
          +',"udf4":'+'null'+',"udf5":'+'null'+',"udf6":'+'null'+',"udf7":'+'null'+',"udf8":'+'null'+',"udf9":'+'null'+',"udf10":'+'null'+',"udf11":'+'null'
          +',"udf12":'+'null'+',"udf13":'+'null'+',"udf14":'+'null'+',"udf15":'+'null'+',"udf16":'+'null'+',"udf17":'+'null'+',"udf18":'+'null'+',"udf19":'+'null'
          +',"udf20":'+'null'+',"udf21":'+'null'+',"udf22":'+'null'+',"udf23":'+'null'+',"udf24":'+'null'+',"udf25":'+'null'+',"udf26":'+'null'+',"udf27":'+'null'
          +',"udf28":'+'null'+',"udf29":'+'null'+',"udf30":'+'null'+',"ecomTransactionID":'+'null'
          +',"stateCessSpecificRt":'+'0'+',"stateCessSpecificAmt":'+'0'+',"tcsRtIncomeTax":'+'0'+',"tcsAmtIncomeTax":'+'0'+',"docRefNo":'+'null'+',"paidAmt":'+'0'+',"balanceAmt":'+'0'
          +',"profitCentre3":'+'null'+',"profitCentre4":'+'null'+',"profitCentre5":'+'null'
          +',"profitCentre6":'+'null'+',"profitCentre7":'+'null'+',"profitCentre8":'+'null'
          +'},' ;
          Itemlist += lineitem ;
        UNTIL recTranShipLine.NEXT=0;
        END;
        //Where := '>' ;
       // Which := ',' ;
        ProdList := DELCHR(Itemlist,'>',',');

        PreDOC := '{"preceedingInvNo":'+'null'+',"preccedingInvDate":'+'null'+',"invRef":'+'null'+'}';
        ConDetail :='{"receiptAdviceRef":'+'null'+',"receiptAdviceDate":'+'null'+',"tenderRef":'+'null'+',"contractRef":'+'null'+',"externalRef":'+'null'+',"projectRef":'+'null'+',"custPoRefNo":'+'null'+',"custPoRefDate":'+'null'+'}';
        addDoc := '{"supportingDocURL":'+'null'+',"supportingDocBase64":'+'null'+',"addlInfo":'+'null'+'}';
        attrDetail := '{"attributeName":'+'null'+',"attributeValue":'+'null'+'}';

      GenerateJSON := '{ "req" :[  { "userId":'+'null'+',"srcFileName":'+'null'+',"srcIdentifier":'+'null'+',"returnPeriod":'+'"'+ReturnPeriod+'"'+ ',"suppGstin":'+ '"'+SupplierGSTIN+'"'
         + ',"docType" :'+ '"'+Typ+'"' + ',"docNo" :' + '"'+OrgInvNo+'"' +',"docDate":'+ '"'+Dt+'"'+',"orgDocType":'+'"'+'INV'+'"'+',"crDRPreGst":'+'null'
         +',"custGstin":'+ '"'+CustomerGSTIN+'"'+',"custOrSupType":'+CustomerType+',"diffPercent":'+'null'+',"orgCgstin":'+'"'+CustomerGSTIN+'"'
         +',"custOrSupName":'+'"'+CustomerLegalName+'"'+',"custOrSupCode":'+'"'+CustomerCode+'"'+',"custOrSupAddr1":'+'"'+CustomerAddress1+'"'
         +',"custOrSupAddr2":'+ '"'+CustomerAddress2+'"'+',"custOrSupAddr4":'+ '"'+CustomerLocation+'"'+',"billToState":'+'"'+CustomerStateCode+'"'
         +',"shipToState":'+ShipToStateCode+',"pos":'+'"'+CustomerStateCode+'"'+',"stateApplyingCess":'+'null'+',"portCode":'+'null'
         +',"shippingBillNo":'+'null'+',"shippingBillDate":'+ShippingBillDate+ ',"sec7OfIgstFlag":'+ 'null'
         + ',"reverseCharge":'+'null'+',"tcsFlag":'+'null'+',"ecomGSTIN":'+'null'+',"claimRefundFlag":'+'null'+',"autoPopToRefundFlag":'+'null'
         +',"accVoucherNo":'+'null'+',"accVoucherDate":'+'null'+',"ewbNo":'+'null'+',"ewbDate":'+'null'
         +',"irn" :' + 'null' + ',"irndate" :' + 'null'
         + ', "taxScheme" :' + '"'+TaxScheme+'"' + ',"docCat":'+ '"'+DocCateg+'"'+',"supTradeName":'+ '"'+SupplierTradeName+'"' + ',"supLegalName":'+ '"'+SupplierLegalName+'"'
         + ',"supBuildingNo":'+'"'+SupplierAddress1+'"'+',"supBuildingName":'+'"'+SupplierAddress2+'"'+',"supLocation":'+ '"'+SupplierLocation+'"' +',"supPincode":'+'"'+ SupplierPinCode+'"'
         +',"supStateCode":'+ '"'+SupplierStateCode+'"' +',"supPhone":'+'null'+',"supEmail":'+'null'
         +',"custTradeName":'+ '"'+CustomerTradeName+'"'+',"custLegalName":'+ '"'+CustomerTradeName+'"'+',"custPincode":'+'"'+CustomerPincode+'"'
         +',"custPhone":'+'null'+',"custEmail":'+'null'
         +',"dispatcherGSTIN":'+'null'+',"dispatcherTradeName":'+'null'
         +',"dispatcherBuildingNo":'+'null'+',"dispatcherBuildingName":'+'null'+',"dispatcherLocation":'+'null'
         +',"dispatcherPincode":'+'null'+',"dispatcherStateCode":'+'null'
         +',"shipToGstin":'+ShipToGSTIN+',"shipToTradeName":'+ ShipToTradeName
         +',"shipToLegalName":'+ShipToLegalName+',"shipToBuildingNo":'+ShipToAddress1+',"shipToBuildingName":'+ShipToAddress1+',"shipToLocation":'+ShipToLocation
         +',"shipToPincode":'+ShipToPincode+',"invOtherCharges":'+'"0"'+',"invAssessableAmt":'+DELCHR(FORMAT(InvoiceAssessableAmount),'=',',')
         +',"invIgstAmt":'+DELCHR(FORMAT(InvoiceIGSTAmount),'=',',')
         +',"invCgstAmt":'+DELCHR(FORMAT(InvoiceCGSTAmount),'=',',')+',"invSgstAmt":'+DELCHR(FORMAT(InvoiceSGSTAmount),'=',',')+',"invCessAdvaloremAmt":'+'0'
         +',"invCessSpecificAmt":'+'0'+',"invStateCessAmt":'+'0'+',"roundOff":'+'0'+',"totalInvValueInWords":'+'null'
         +',"foreignCurrency":'+'"'+CurrencyCode+'"'+',"countryCode":'+'"'+CountryCode+'"'+',"invValueFc":'+DELCHR(InvoiceValueFC,'=',',')
         +',"invPeriodStartDate":'+'null'
         +',"invPeriodEndDate":'+'null'+',"payeeName":'+'null'+',"modeOfPayment":'+'null'+',"branchOrIfseCode":'+'null'+',"paymentTerms":'+'"'+PaymentTerms+'"'
         +',"paymentInstruction":'+'null'+',"creditTransfer":'+'null'+',"directDebit":'+'null'
         +',"creditDays":'+'null'+',"paymentDueDate":'+'null'+',"accDetail":'+'null'+',"tdsFlag":'+'null'+',"tranType":'+'"'+'O'+'"'
         + ',"subsupplyType":'+'"'+'TAX'+'"'+',"otherSupplyTypeDesc":'+'null'
         +',"transporterID":'+'null'
         +',"transporterName":'+'null'+',"transportMode":'+'null'+',"transportDocNo":'+'null'+',"transportDocDate":'+'null'
         +',"distance":'+'0'+',"vehicleNo":'+'null'
         +',"vehicleType":'+'null'+',"exchangeRt":'+'null'+',"companyCode":'+'null'+',"glPostingDate":'+'null'+',"salesOrderNo":'+'null'
         +',"custTan":'+CustomerTAN + ', "canReason" :' + 'null' + ',"canRemarks" :' + 'null'+',"invStateCessSpecificAmt":'+'0'
         +',"tcsFlagIncomeTax":'+'null' +',"custPANOrAadhaar":'+CustomerPANOrAadhaar +',"glStateCessSpecific":'+'null'
         +',"glCodeIgst":'+'null'
         +',"glCodeCgst":'+'null'+',"glCodeSgst":'+'null'+',"glCodeAdvCess":'+'null'+',"glCodeSpCess":'+'null'+',"glCodeStateCess":'+'null'
         +',"location":'+'null'+',"division":'+'null'+',"salesOrg":'+'null'+',"distChannel":'+'null'+',"profitCentre1":'+'null'+',"profitCentre2":'+'null'
         +',"invRemarks":'+'null'
         +',"preDocDtls":['+PreDOC+']'
         +',"contrDtls":['+ConDetail+']'
         +',"addlDocDtls":['+addDoc+']'
         +',"lineItems":['+ProdList+']'
         +',"attribDtls":['+attrDetail+']'
         +'}] }';


      MESSAGE('Generate E-Invoice : %1',GenerateJSON);

      //KH 040521 BEGIN

      recSaleRecSetup.GET;
      AuthURL            := recSaleRecSetup."E-way & E-Inv Auth. URL" ;
      GenIRNURL          := recSaleRecSetup."E-Invoice Generate IRN URL" ;
      AuthUserName       := recSaleRecSetup."E-way & E-Inv User ID";
      AuthPassword       := recSaleRecSetup."E-way & E-Inv Password" ;
      APIAccessKey       := recSaleRecSetup."E-way & E-Inv API Key";


      GenIRN             :=  GenIRN.EInvoicing();
      ResponseStr        :=  GenIRN.GenerareIRN(AuthURL,GenIRNURL,AuthUserName, AuthPassword , APIAccessKey ,GenerateJSON ) ;
      MESSAGE (ResponseStr);
      GetString          :=  COPYSTR(ResponseStr,1,1);

      IF GetString = '1' THEN BEGIN
      SelectString := CONVERTSTR(ResponseStr,'|',',');
      //MESSAGE(SelectString);
      DocNo              := SELECTSTR(3,SelectString);
      IRNNo              := SELECTSTR(7,SelectString);
      AckNo              := SELECTSTR(5,SelectString);
      AcKDate            := SELECTSTR(6,SelectString);
      QRCode             := SELECTSTR(8,SelectString);
      END;

       IF GetString = '0' THEN BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Failure';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;
              rec."E-Invoice IRN Status" := 'Failure' ;
              rec.MODIFY;
            END ELSE
            BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Success';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;

              rec."E-Invoice IRN No"  := IRNNo ;
              rec."E-Invoice Acknowledge No." := AckNo ;
              rec."E-Invoice Acknowledge Date" := AcKDate ;
              rec."E-Invoice Status" := 'Success';
              rec."E-Invoice IRN Status" := 'Success' ;
              rec.MODIFY;
              IF QRCode <> '' THEN BEGIN
              QRCodeManagement(DocNo,QRCode,IRNNo);
             END;

          END;
      //KH 040521 END
    END;

    PROCEDURE GenerateJSONforSerInv@1000000021(rec@1000000000 : Record 50053);
    VAR
      recSerInvHdr@1000000001 : Record 5992;
      recSerInvLine@1000000002 : Record 5993;
    BEGIN
      GenerateJSON := '';
      SNum := 0; //KH170221
      SupplyType := '';
      Typ := '';
      Dt := '';
      ReturnPeriod := '';
      OrgInvNo := '';
      CurrencyCode := '';
      DocCateg := '';
      TaxScheme := '';
      SupplierGSTIN := '';
      SupplierTradeName := '';
      SupplierLegalName := '';
      SupplierAddress1 := '';
      SupplierAddress2 := '';
      SupplierLocation := '';
      SupplierPinCode := '';
      Statename := '';
      SupplierPhone := 'null'; //kh170221
      SupplierEmail := 'null'; //kh170221
      CustomerTAN := 'null'; //kh170221
      CustomerGSTIN := '';
      CustomerPANOrAadhaar := 'null';
      CountryCode :='';
      CustomerTradeName := '';
      CustomerLegalName := '';
      CustomerAddress1 := '';
      CustomerAddress2 := '';
      CustomerLocation := '';
      CustomerPincode :='';
      TransType := '';
      Distance :='';
      VehicleNo := '';
      VehicleType :='';
      PaymentTerms :='null';
      CustomerCode :='';
      CustomerType := 'null'; //KH170221
      CustomerStateCode := '';
      CustomerPhone := '';
      CustomerEmail := 'null';//KH170221
      DispatcherGSTIN := '';
      DispatcherTradeName := '';
      DispatcherAddress1 := '';
      DispatcherAddress2 := '';
      DispatcherLocation := '';
      DispatcherPincode := 'null';
      DispatcherStateCode := '';
      ShipToGSTIN :=  'null';
      ShipToTradeName := '';
      ShipToLegalName := '';
      ShipToAddress1 := '';
      ShipToAddress2 := '';
      ShippingBillDate := '';
      ShipToLocation := '';
      ShipToPincode :=  '';
      ShipToStateCode := '';
      ShipToPhone := '';
      ShipToEmail := '';


      DocType := 'Service Invoice';
      IGSTRate := 0;
      IGSTAmount := 0;
      CGSTRate := 0;
      CGSTAmount := 0;
      SGSTRate :=0;
      SGSTAmount := 0;
      ProductNo := '' ;
      ProductDescription := '' ;
      HSN := '';
      QTY := 0;
      UnitPrice := '';
      ItemAmount := '';
      ItemDiscount := '0';
      PreTaxAmount := '';
      Location := '';
      Isservice := '';
      CategoryOfProduct := '';
      InvoiceValueFC := '';
      InvoicePeriodStartDate := '';
      InvoicePeriodEndDate := '';
      UQC := '';
      TotalItemAmount :=0;
      ItemOtherCharges := 0;
      ItemAssessableAmount := 0;

      recSerInvHdr.RESET;
      recSerInvHdr.SETRANGE("No.",rec."No.");
      IF recSerInvHdr.FIND('-') THEN BEGIN
        UsersID := recSerInvHdr."User ID";
        IF recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::Taxable THEN
          Typ := 'INV'
        ELSE
          IF (recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::"Debit Note") OR
             (recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::Supplementary)
          THEN
            Typ := 'DBN'
          ELSE
            Typ := 'INV';
        Dt := FORMAT(recSerInvHdr."Posting Date",0,'<Year4>-<Month,2>-<Day,2>');
        ReturnPeriod := FORMAT(recSerInvHdr."Posting Date",0,'<Month,2><Year4>');
        OrgInvNo := recSerInvHdr."No.";

         //KH040121 BEGIN
         IF recSerInvHdr."Currency Code" <> '' THEN BEGIN
            CurrencyCode := recSerInvHdr."Currency Code"
         END ELSE
            CurrencyCode := 'INR';
       //KH040121 END
         IF recSerInvHdr."Ship-to Code" <> '' THEN BEGIN
            DocCateg := 'SHP'
         END ELSE
            DocCateg := 'REG';

      IF recCust.GET(recSerInvHdr."Bill-to Customer No.") THEN BEGIN
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             SupplyType := 'TAX';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             SupplyType := 'TAX';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
             recSerInvLine.RESET;
             recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
             IF recSerInvLine.FIND('-') THEN BEGIN
             REPEAT
             TaxAmount += recSerInvLine."Total GST Amount";
             UNTIL recSerInvLine.NEXT = 0;
             END;
            IF TaxAmount <> 0 THEN
             SupplyType := 'EXPT'
             ELSE
             SupplyType := 'EXPWT';
          END;


          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
             SupplyType := 'EXT';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             SupplyType := 'DXP';


          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
             TaxScheme := 'NEWB';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
             TaxScheme := 'NBOTH';

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
             TaxScheme := 'NEWB';
          END;

          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
             TaxScheme := 'NBOTH';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
             TaxScheme := 'NEWB';
      END;


          CompanyInformationBuff.GET;
          LocationBuff.GET(recSerInvHdr."Location Code");
          SupplierGSTIN := LocationBuff."GST Registration No.";
          SupplierTradeName := 'Draeger India Pvt Ltd.';
          SupplierLegalName := 'Draeger India Pvt Ltd.';
          SupplierAddress1 := LocationBuff.Address;
          SupplierAddress2 := LocationBuff."Address 2";
          Flno := '';
          SupplierLocation := LocationBuff.City;
          Dst := LocationBuff.City;
          SupplierPinCode := COPYSTR(LocationBuff."Post Code",1,6);
          StateBuff.GET(LocationBuff."State Code");
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          recState.RESET;
          recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
            IF recState.FIND('-') THEN BEGIN
            Statename := recState.Description;
            END;
          SupplierPhone := '"'+COPYSTR(LocationBuff."Phone No.",1,10)+'"'; //KH170221
          SupplierEmail := '"'+COPYSTR(LocationBuff."E-Mail",1,50)+'"';//KH170221


      //For customer detail
         // recLoc.GET(recSalesInvHeader."Location Code");
          recCust.GET(recSerInvHdr."Bill-to Customer No.");
          CustomerGSTIN := recCust."GST Registration No.";
          CustomerTAN := '"'+recCust."T.A.N No."+'"';  //KH040121 //kh170221
          CustomerGSTIN := recCust."GST Registration No.";//KH040121
          CustomerPANOrAadhaar := '"'+recCust."P.A.N. No."+'"'; //KH040121 //kh170221
          CountryCode  := recCust."Country/Region Code"; //KH040121
          CustomerTradeName := recCust.Name;
          CustomerLegalName := recCust.Name;
          CustomerAddress1 := recCust.Address;
          CustomerAddress2 := recCust."Address 2";
          IF CustomerAddress2 = '' THEN
          CustomerAddress2 := 'null';
          Flno := '';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN
          CustomerLocation := 'null'
          ELSE
          CustomerLocation := recCust.City;
          Dst := recSerInvHdr."Bill-to City";
          IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
          CustomerPincode := '999999'
          ELSE
          CustomerPincode := COPYSTR(recCust."Post Code",1,6);
          TransType := FORMAT(recSerInvHdr."Transaction Type");
      //    Distance := FORMAT(recSerInvHdr."Distance (Km)");
          VehicleNo := '';
      //    VehicleType := FORMAT(recSerInvHdr."Vehicle Type");
        //  PaymentTerms := recSerInvHdr."Payment Terms Code";
          CustomerCode :=recSerInvHdr."Bill-to Customer No.";
          //CustomerType := '';
          recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
          recSerInvLine.SETFILTER(Quantity,'<>%1',0);
          IF recSerInvLine.FINDFIRST THEN
            IF recSerInvLine."GST Place Of Supply" = recSerInvLine."GST Place Of Supply"::"Bill-to Address" THEN BEGIN
              IF NOT (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN BEGIN
                StateBuff.GET(recSerInvHdr."GST Bill-to State Code");
                CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
              END ELSE
                CustomerStateCode := '96';
            //KH280121
             {
              recCust.RESET();
              recCust.SETRANGE("No.",recSerInvHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';
               }//KH280121
              IF Contact.GET(recSerInvHdr."Bill-to Contact No.") THEN BEGIN
                CustomerPhone := COPYSTR(Contact."Phone No.",1,10);
                CustomerEmail := '"'+COPYSTR(Contact."E-Mail",1,50)+'"'; //KH170221
              END ELSE BEGIN
                  IF recCust.GET(recSerInvHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"';//KH170221
                  END;
              END;
            END ELSE
              IF recSerInvLine."GST Place Of Supply" = recSerInvLine."GST Place Of Supply"::"Ship-to Address" THEN BEGIN
                IF NOT (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN BEGIN
                  StateBuff.GET(recSerInvHdr."GST Ship-to State Code");
                  CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
                END ELSE
                  CustomerStateCode := '96';
              //kh280121 BEGIN
              {
              recCust.RESET();
              recCust.SETRANGE("No.",recSerInvHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';
              }
              //kh280121 END
                IF ShipToAddr.GET(recSerInvHdr."Customer No.",recSerInvHdr."Ship-to Code") THEN BEGIN
                  CustomerPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
                  CustomerEmail := '"'+COPYSTR(ShipToAddr."E-Mail",1,50)+'"'; //KH170221
                END ELSE BEGIN
                  IF recCust.GET(recSerInvHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"'; //KH170221
                  END;
                END;
              END ELSE BEGIN
                CustomerStateCode := '';
                CustomerPhone := '';
                CustomerEmail := 'null';
              END;

      //FOR Dispatch

          recLoc.GET(recSerInvHdr."Location Code");
          DispatcherGSTIN := recLoc."GST Registration No.";
          DispatcherTradeName := recLoc.Name;
          DispatcherAddress1 := recLoc.Address;
          DispatcherAddress2 := recLoc."Address 2";
          DispatcherLocation := recLoc.City;
          DispatcherPincode := recLoc."Post Code";
          recState.RESET();
          recState.SETRANGE(Code,recLoc."State Code");
            IF recState.FIND('-') THEN
              DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //For Ship detail

          IF recSerInvHdr."Ship-to Code" <> '' THEN BEGIN
            recLoc.GET(recSerInvHdr."Location Code");
            ShipToAddr.GET(recSerInvHdr."Customer No.",recSerInvHdr."Ship-to Code");
            ShipToGSTIN := '"'+ShipToAddr."GST Registration No."+'"';//KH170221
             IF ShipToAddr."GST Registration No." = '' THEN //KH070423
            ShipToGSTIN := '"'+'URP'+'"';//KH070423
            ShipToTradeName := recSerInvHdr."Ship-to Name";
            ShipToLegalName := recSerInvHdr."Ship-to Name";
            ShipToAddress1 := recSerInvHdr."Ship-to Address";
            ShipToAddress2 := recSerInvHdr."Ship-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerInvHdr."Posting Date");
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSerInvHdr."Ship-to City";
            Dst := recSerInvHdr."Ship-to City";
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSerInvHdr."Ship-to Post Code",1,6);
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recSerInvHdr."GST Ship-to State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
            ShipToEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
          END
          ELSE
          IF recSerInvHdr."Ship-to Code" = '' THEN BEGIN
            //recLoc.GET(recSalesInvHeader."Location Code");
            recCust.GET(recSerInvHdr."Customer No.");
            ShipToGSTIN := '"'+recCust."GST Registration No."+'"';  //kh
            ShipToTradeName := recCust.Name;  //28012021
            ShipToLegalName := recCust.Name;
            ShipToAddress1 := recCust.Address;
            ShipToAddress2 := recCust."Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerInvHdr."Posting Date");
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recCust.City;
            Dst := recSerInvHdr.City;
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recCust."Post Code",1,6);
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recCust."State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(recCust."Phone No.",1,10);
            ShipToEmail := COPYSTR(recCust."E-Mail",1,50);
          END;
       END;

          InvoiceValue := 0;
          InvoiceOtherCharges := 0;
          InvoiceAssessableAmount := 0;
          InvoiceIGSTAmount := 0;
          InvoiceCGSTAmount := 0;
          InvoiceSGSTAmount := 0;
          recSerInvLine.RESET;
          recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
          IF recSerInvLine.FIND('-') THEN BEGIN
          REPEAT
          //"Sales Invoice Line".CALCFIELDS("Charges To Customer");
          //InvoiceOtherCharges += recSerInvLine."Charges To Customer";
          InvoiceAssessableAmount += (recSerInvLine."Line Amount" - recSerInvLine."Line Discount Amount" + recSerInvLine."Charges To Customer");
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceIGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceCGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceSGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          UNTIL recSerInvLine.NEXT = 0;
          END;

       InvoiceValue := (InvoiceAssessableAmount + InvoiceIGSTAmount + InvoiceCGSTAmount + InvoiceSGSTAmount + InvoiceOtherCharges);


        recSerInvLine.RESET;
        recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
        recSerInvLine.SETFILTER(Quantity,'<>%1',0);
        recSerInvLine.SETFILTER("No.",'<>%1','44491050');
        recSerInvLine.SETFILTER("Line Amount",'<>%1',0);
        IF recSerInvLine.FIND('-') THEN BEGIN
        REPEAT
        {
          IF recSerInvLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recSerInvLine.COUNT);
         }

          lineitem := '';
          SNum += 1;
          ProductNo := recSerInvLine."No.";
          ProductDescription := recSerInvLine.Description;
      //    UQC := "Unit of Measure Code";
          HSN := COPYSTR(recSerInvLine."HSN/SAC Code",1,8);
          QTY := recSerInvLine.Quantity;
          UnitPrice := FORMAT(recSerInvLine."Unit Price");
          ItemAmount := FORMAT(recSerInvLine."Line Amount" - recSerInvLine."Line Discount Amount" + recSerInvLine."Charges To Customer");
          ItemDiscount := FORMAT(recSerInvLine."Line Discount Amount");
          PreTaxAmount := FORMAT(recSerInvLine."Line Amount");
          Location := recSerInvLine."Location Code";
          CategoryOfProduct := recSerInvLine."Item Category Code";
          InvoiceValueFC := FORMAT(recSerInvLine."Amount To Customer");
          InvoicePeriodStartDate := FORMAT(recSerInvLine."Service From");
          InvoicePeriodEndDate := FORMAT(recSerInvLine."Service To");
          ItemOtherCharges := (recSerInvLine."Charges To Customer" + recSerInvLine."Line Amount");


          IF recSerInvLine."GST Group Type" = recSerInvLine."GST Group Type"::Goods THEN BEGIN
              Isservice := 'N';
          END ELSE BEGIN
          Isservice := 'Y';
          END;

          recIUOM.RESET;
          recIUOM.SETRANGE(Code,recSerInvLine."Unit of Measure Code");
          IF recIUOM.FIND('-') THEN BEGIN
             recUOM.RESET;
             recUOM.SETRANGE(Code,recIUOM.Code);
             IF recUOM.FIND('-') THEN BEGIN
             UQC := recUOM.Description2
             END ELSE
             UQC := 'OTH';
          END;


          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := (recDGLE."GST %");
             IGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          TotalItemAmount := (recSerInvLine."Line Amount" - recSerInvLine."Line Discount Amount" + recSerInvLine."Charges To Customer"+ IGSTAmount + CGSTAmount + SGSTAmount );
          ItemAssessableAmount := (recSerInvLine."Line Amount" - recSerInvLine."Line Discount Amount" + recSerInvLine."Charges To Customer");


          lineitem := '{"itemNo":'+FORMAT(SNum)+',"glCodeTaxableVal":'+'null'+',"supplyType":'+'"'+SupplyType+'"'+',"fob":'+FORMAT(SNum)+',"exportDuty":'+'0'
          + ',"hsnsacCode":' + '"'+HSN+'"'+',"ProductCode":' +'"'+ ProductNo+'"'+ ',"itemDesc":' +'"'+ ProductDescription+'"'+ ',"itemType":'+'"'+CategoryOfProduct+'"'
          + ',"itemUqc":'+'"'+UQC+'"'+',"itemQty":'+DELCHR(FORMAT(QTY),'=',',')+',"taxableVal":'+DELCHR(FORMAT(ItemAssessableAmount),'=',',')
          +',"igstRt":'+DELCHR(FORMAT(IGSTRate),'=',',')+',"igstAmt":'+DELCHR(FORMAT(IGSTAmount),'=',',')+',"cgstRt":'+DELCHR(FORMAT(CGSTRate),'=',',')
          +',"cgstAmt":'+DELCHR(FORMAT(CGSTAmount),'=',',')
          +',"sgstRt":'+DELCHR(FORMAT(SGSTRate),'=',',')+',"sgstAmt":'+DELCHR(FORMAT(SGSTAmount),'=',',')
          +',"cessRtAdvalorem":'+'0'+',"cessAmtAdvalorem":'+'0'+',"cessRtSpecific":'+'0'+',"cessAmtSpecific":'+'0'+',"stateCessRt":'+'0'+',"stateCessAmt":'+'0'
          + ',"otherValues":'+'0'+',"lineItemAmt":'+DELCHR(FORMAT(InvoiceValue),'=',',')+',"tcsAmt":'+'0'
          +',"itcFlag":'+'null'+',"crDrReason":'+'null'+',"plantCode":'+'null'
          +',"serialNoII":'+'null' +',"ProductName":'+'null'+',"isService":' +'"'+ Isservice +'"'
          +',"barcode":'+'null'+',"batchNameOrNo":'+'null'+',"batchExpiryDate":'+'null'+',"warrantyDate":'+'null'
          +',"originCountry":'+'null' +',"freeQuantity":'+'0'
          +',"unitPrice":'+DELCHR(UnitPrice,'=',',')+',"itemAmt":'+DELCHR(ItemAmount,'=',',')+',"itemDiscount":'+DELCHR(ItemDiscount,'=',',')
          +',"preTaxAmt":'+DELCHR(PreTaxAmount,'=',',')
          +',"totalItemAmt":'+DELCHR(FORMAT(TotalItemAmount),'=',',')
          +',"orderLineRef":'+'null'+',"tcsCgstAmt":'+'null'+',"tcsSgstAmt":'+'null'
          +',"tdsIgstAmt":'+'0'+',"tdsCgstAmt":'+'0'+',"tdsSgstAmt":'+'0'+',"subDivision":'+'null'
          +',"udf1":'+'null'
          +',"udf2":'+'null'+',"udf3":'+'null'
          +',"udf4":'+'null'+',"udf5":'+'null'+',"udf6":'+'null'+',"udf7":'+'null'+',"udf8":'+'null'+',"udf9":'+'null'+',"udf10":'+'null'+',"udf11":'+'null'
          +',"udf12":'+'null'+',"udf13":'+'null'+',"udf14":'+'null'+',"udf15":'+'null'+',"udf16":'+'null'+',"udf17":'+'null'+',"udf18":'+'null'+',"udf19":'+'null'
          +',"udf20":'+'null'+',"udf21":'+'null'+',"udf22":'+'null'+',"udf23":'+'null'+',"udf24":'+'null'+',"udf25":'+'null'+',"udf26":'+'null'+',"udf27":'+'null'
          +',"udf28":'+'null'+',"udf29":'+'null'+',"udf30":'+'null'+',"ecomTransactionID":'+'null'
          +',"stateCessSpecificRt":'+'0'+',"stateCessSpecificAmt":'+'0'+',"tcsRtIncomeTax":'+'0'+',"tcsAmtIncomeTax":'+'0'+',"docRefNo":'+'null'+',"paidAmt":'+'0'+',"balanceAmt":'+'0'
          +',"profitCentre3":'+'null'+',"profitCentre4":'+'null'+',"profitCentre5":'+'null'
          +',"profitCentre6":'+'null'+',"profitCentre7":'+'null'+',"profitCentre8":'+'null'
          +'},' ;
          Itemlist += lineitem ;
        UNTIL recSerInvLine.NEXT=0;
        END;
        //Where := '>' ;
       // Which := ',' ;
        ProdList := DELCHR(Itemlist,'>',',');

        PreDOC := '{"preceedingInvNo":'+'null'+',"preccedingInvDate":'+'null'+',"invRef":'+'null'+'}';
        ConDetail :='{"receiptAdviceRef":'+'null'+',"receiptAdviceDate":'+'null'+',"tenderRef":'+'null'+',"contractRef":'+'null'+',"externalRef":'+'null'+',"projectRef":'+'null'+',"custPoRefNo":'+'null'+',"custPoRefDate":'+'null'+'}';
        addDoc := '{"supportingDocURL":'+'null'+',"supportingDocBase64":'+'null'+',"addlInfo":'+'null'+'}';
        attrDetail := '{"attributeName":'+'null'+',"attributeValue":'+'null'+'}';

      GenerateJSON := '{ "req" :[  { "userId":'+'null'+',"srcFileName":'+'null'+',"srcIdentifier":'+'null'+',"returnPeriod":'+'"'+ReturnPeriod+'"'+ ',"suppGstin":'+ '"'+SupplierGSTIN+'"'
         + ',"docType" :'+ '"'+Typ+'"' + ',"docNo" :' + '"'+OrgInvNo+'"' +',"docDate":'+ '"'+Dt+'"'+',"orgDocType":'+'"'+'INV'+'"'+',"crDRPreGst":'+'null'
         +',"custGstin":'+ '"'+CustomerGSTIN+'"'+',"custOrSupType":'+CustomerType+',"diffPercent":'+'null'+',"orgCgstin":'+'"'+CustomerGSTIN+'"'
         +',"custOrSupName":'+'"'+CustomerLegalName+'"'+',"custOrSupCode":'+'"'+CustomerCode+'"'+',"custOrSupAddr1":'+'"'+CustomerAddress1+'"'
         +',"custOrSupAddr2":'+ '"'+CustomerAddress2+'"'+',"custOrSupAddr4":'+ '"'+CustomerLocation+'"'+',"billToState":'+'"'+CustomerStateCode+'"'
         +',"shipToState":'+'"'+ShipToStateCode+'"'+',"pos":'+'"'+CustomerStateCode+'"'+',"stateApplyingCess":'+'null'+',"portCode":'+'null'
         +',"shippingBillNo":'+'null'+',"shippingBillDate":'+'"'+ShippingBillDate+'"'+ ',"sec7OfIgstFlag":'+ 'null'
         + ',"reverseCharge":'+'null'+',"tcsFlag":'+'null'+',"ecomGSTIN":'+'null'+',"claimRefundFlag":'+'null'+',"autoPopToRefundFlag":'+'null'
         +',"accVoucherNo":'+'null'+',"accVoucherDate":'+'null'+',"ewbNo":'+'null'+',"ewbDate":'+'null'
         +',"irn" :' + 'null' + ',"irndate" :' + 'null'
         + ', "taxScheme" :' + '"'+TaxScheme+'"' + ',"docCat":'+ '"'+DocCateg+'"'+',"supTradeName":'+ '"'+SupplierTradeName+'"' + ',"supLegalName":'+ '"'+SupplierLegalName+'"'
         + ',"supBuildingNo":'+'"'+SupplierAddress1+'"'+',"supBuildingName":'+'"'+SupplierAddress2+'"'+',"supLocation":'+ '"'+SupplierLocation+'"' +',"supPincode":'+'"'+ SupplierPinCode+'"'
         +',"supStateCode":'+ '"'+SupplierStateCode+'"' +',"supPhone":'+'null'+',"supEmail":'+'null'
         +',"custTradeName":'+ '"'+CustomerTradeName+'"'+',"custLegalName":'+ '"'+CustomerTradeName+'"'+',"custPincode":'+'"'+CustomerPincode+'"'
         +',"custPhone":'+'null'+',"custEmail":'+'null'
         +',"dispatcherGSTIN":'+'"'+DispatcherGSTIN+'"'+',"dispatcherTradeName":'+'"'+DispatcherTradeName+'"'
         +',"dispatcherBuildingNo":'+'"'+DispatcherAddress1+'"'+',"dispatcherBuildingName":'+'"'+DispatcherAddress1+'"'+',"dispatcherLocation":'+'"'+DispatcherLocation+'"'
         +',"dispatcherPincode":'+DispatcherPincode+',"dispatcherStateCode":'+'"'+DispatcherStateCode+'"'
         +',"shipToGstin":'+'null'+',"shipToTradeName":'+'null'
         +',"shipToLegalName":'+'null'+',"shipToBuildingNo":'+'null'+',"shipToBuildingName":'+'null'+',"shipToLocation":'+'null'
         +',"shipToPincode":'+'null'+',"invOtherCharges":'+'"0"'+',"invAssessableAmt":'+DELCHR(FORMAT(InvoiceAssessableAmount),'=',',')
         +',"invIgstAmt":'+DELCHR(FORMAT(InvoiceIGSTAmount),'=',',')
         +',"invCgstAmt":'+DELCHR(FORMAT(InvoiceCGSTAmount),'=',',')+',"invSgstAmt":'+DELCHR(FORMAT(InvoiceSGSTAmount),'=',',')+',"invCessAdvaloremAmt":'+'0'
         +',"invCessSpecificAmt":'+'0'+',"invStateCessAmt":'+'0'+',"roundOff":'+'0'+',"totalInvValueInWords":'+'null'
         +',"foreignCurrency":'+'"'+CurrencyCode+'"'+',"countryCode":'+'"'+CountryCode+'"'+',"invValueFc":'+DELCHR(InvoiceValueFC,'=',',')
         +',"invPeriodStartDate":'+'null'
         +',"invPeriodEndDate":'+'null'+',"payeeName":'+'null'+',"modeOfPayment":'+'null'+',"branchOrIfseCode":'+'null'+',"paymentTerms":'+'"'+PaymentTerms+'"'
         +',"paymentInstruction":'+'null'+',"creditTransfer":'+'null'+',"directDebit":'+'null'
         +',"creditDays":'+'null'+',"paymentDueDate":'+'null'+',"accDetail":'+'null'+',"tdsFlag":'+'null'+',"tranType":'+'"'+'O'+'"'
         + ',"subsupplyType":'+'"'+'TAX'+'"'+',"otherSupplyTypeDesc":'+'null'
         +',"transporterID":'+'null'
         +',"transporterName":'+'null'+',"transportMode":'+'null'+',"transportDocNo":'+'null'+',"transportDocDate":'+'null'
         +',"distance":'+'0'+',"vehicleNo":'+'null'
         +',"vehicleType":'+'null'+',"exchangeRt":'+'null'+',"companyCode":'+'null'+',"glPostingDate":'+'null'+',"salesOrderNo":'+'null'
         +',"custTan":'+CustomerTAN + ', "canReason" :' + 'null' + ',"canRemarks" :' + 'null'+',"invStateCessSpecificAmt":'+'0'
         +',"tcsFlagIncomeTax":'+'null' +',"custPANOrAadhaar":'+CustomerPANOrAadhaar +',"glStateCessSpecific":'+'null'
         +',"glCodeIgst":'+'null'
         +',"glCodeCgst":'+'null'+',"glCodeSgst":'+'null'+',"glCodeAdvCess":'+'null'+',"glCodeSpCess":'+'null'+',"glCodeStateCess":'+'null'
         +',"location":'+'null'+',"division":'+'null'+',"salesOrg":'+'null'+',"distChannel":'+'null'+',"profitCentre1":'+'null'+',"profitCentre2":'+'null'
         +',"invRemarks":'+'null'
         +',"preDocDtls":['+PreDOC+']'
         +',"contrDtls":['+ConDetail+']'
         +',"addlDocDtls":['+addDoc+']'
         +',"lineItems":['+ProdList+']'
         +',"attribDtls":['+attrDetail+']'
         +'}] }';


      MESSAGE('Generate E-Invoice : %1',GenerateJSON);


      //KH 040521 BEGIN

      recSaleRecSetup.GET;
      AuthURL            := recSaleRecSetup."E-way & E-Inv Auth. URL" ;
      GenIRNURL          := recSaleRecSetup."E-Invoice Generate IRN URL" ;
      AuthUserName       := recSaleRecSetup."E-way & E-Inv User ID";
      AuthPassword       := recSaleRecSetup."E-way & E-Inv Password" ;
      APIAccessKey       := recSaleRecSetup."E-way & E-Inv API Key";

      GenIRN             :=  GenIRN.EInvoicing();
      ResponseStr        :=  GenIRN.GenerareIRN(AuthURL,GenIRNURL,AuthUserName, AuthPassword , APIAccessKey ,GenerateJSON ) ;
      MESSAGE (ResponseStr);
      GetString          :=  COPYSTR(ResponseStr,1,1);

      IF GetString = '1' THEN BEGIN
      SelectString := CONVERTSTR(ResponseStr,'|',',');
      //MESSAGE(SelectString);
      DocNo              := SELECTSTR(3,SelectString);
      IRNNo              := SELECTSTR(7,SelectString);
      AckNo              := SELECTSTR(5,SelectString);
      AcKDate            := SELECTSTR(6,SelectString);
      QRCode             := SELECTSTR(8,SelectString);
      END;

       IF GetString = '0' THEN BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Failure';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;
              rec."E-Invoice IRN Status" := 'Failure' ;
              rec.MODIFY;
            END ELSE
            BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Success';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;

              rec."E-Invoice IRN No"  := IRNNo ;
              rec."E-Invoice Acknowledge No." := AckNo ;
              rec."E-Invoice Acknowledge Date" := AcKDate ;
              rec."E-Invoice Status" := 'Success';
              rec."E-Invoice IRN Status" := 'Success' ;
              rec.MODIFY;
              IF QRCode <> '' THEN BEGIN
              QRCodeManagement(DocNo,QRCode,IRNNo);
             END;
          END;
      //KH 040521 END

      {
      GenerateJSON := '';

      recSerInvHdr.RESET;
      recSerInvHdr.SETRANGE("No.",rec."No.");
      IF recSerInvHdr.FIND('-') THEN BEGIN
      IF recSerInvHdr."GST Customer Type" IN [recSerInvHdr."GST Customer Type"::Unregistered,recSerInvHdr."GST Customer Type"::" "]
          THEN
            ERROR(UnRegCusrErr);


        IF recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::Taxable THEN
          Typ := 'INV'
        ELSE
          IF (recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::"Debit Note") OR
             (recSerInvHdr."Invoice Type" = recSerInvHdr."Invoice Type"::Supplementary)
          THEN
            Typ := 'DBN'
          ELSE
            Typ := 'INV';
        Dt := FORMAT(recSerInvHdr."Posting Date",0,'<Day,2>/<Month,2>/<Year4>');
        OrgInvNo := recSerInvHdr."No.";

          CurrencyCode := recSerInvHdr."Currency Code";

          //SupplierGSTIN := recSerInvHdr."Location GST Reg. No.";//kh271220
          CompanyInformationBuff.GET;
          LocationBuff.GET(recSerInvHdr."Location Code");
          SupplierTradeName := 'Draeger India Pvt Ltd.';
          SupplierLegalName := 'Draeger India Pvt Ltd.';
          SupplierAddress1 := LocationBuff.Address;
          SupplierAddress2 := LocationBuff."Address 2";
          Flno := '';
          SupplierLocation := LocationBuff.City;
          Dst := LocationBuff.City;
          SupplierPinCode := COPYSTR(LocationBuff."Post Code",1,6);
          StateBuff.GET(LocationBuff."State Code");
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          recState.RESET;
          recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
            IF recState.FIND('-') THEN BEGIN
            Statename := recState.Description;
            END;
          SupplierPhone := COPYSTR(LocationBuff."Phone No.",1,10);
          SupplierEmail := COPYSTR(LocationBuff."E-Mail",1,50);

      //For customer detail
         // recLoc.GET(recSalesInvHeader."Location Code");
      //    CustomerGSTIN := recSerInvHdr."Customer GST Reg. No."; //kh271220
          CustomerTradeName := recSerInvHdr."Bill-to Name";
          CustomerLegalName := recSerInvHdr."Bill-to Name";
          CustomerAddress1 := recSerInvHdr."Bill-to Address";
          CustomerAddress2 := recSerInvHdr."Bill-to Address 2";
          IF CustomerAddress2 = '' THEN
          CustomerAddress2 := 'null';
          Flno := '';
          CustomerLocation := recSerInvHdr."Bill-to City";
          Dst := recSerInvHdr."Bill-to City";
          IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
          CustomerPincode := '999999'
          ELSE
          CustomerPincode := COPYSTR(recSerInvHdr."Bill-to Post Code",1,6);
      //    TransactionType := format(recSerInvHdr."Transaction Type");
          Distance := FORMAT(recSerInvHdr."Distance (Km)");
          VehicleNo := '';
          VehicleType := FORMAT(recSerInvHdr."Vehicle Type");
         // PaymentTerms := recSerInvHdr."Payment Terms Code";
          CustomerCode :=recSerInvHdr."Bill-to Customer No.";
          //CustomerType := '';
          recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
          recSerInvLine.SETFILTER(Quantity,'<>%1',0);
          IF recSerInvLine.FINDFIRST THEN
            IF recSerInvLine."GST Place Of Supply" = recSerInvLine."GST Place Of Supply"::"Bill-to Address" THEN BEGIN
              IF NOT (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN BEGIN
                StateBuff.GET(recSerInvHdr."GST Bill-to State Code");
                CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
              END ELSE
                CustomerStateCode := '';
              recCust.RESET();
              recCust.SETRANGE("No.",recSerInvHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '';

              IF Contact.GET(recSerInvHdr."Bill-to Contact No.") THEN BEGIN
                CustomerPhone := COPYSTR(Contact."Phone No.",1,10);
                CustomerEmail := COPYSTR(Contact."E-Mail",1,50);
              END ELSE BEGIN
                  IF recCust.GET(recSerInvHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := COPYSTR(recCust."E-Mail",1,50);
                  END;
              END;
            END ELSE
              IF recSerInvLine."GST Place Of Supply" = recSerInvLine."GST Place Of Supply"::"Ship-to Address" THEN BEGIN
                IF NOT (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN BEGIN
                  StateBuff.GET(recSerInvHdr."GST Ship-to State Code");
                  CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
                END ELSE
                  CustomerStateCode := '';
              recCust.RESET();
              recCust.SETRANGE("No.",recSerInvHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '';

                IF ShipToAddr.GET(recSerInvHdr."Customer No.",recSerInvHdr."Ship-to Code") THEN BEGIN
                  CustomerPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
                  CustomerEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
                END ELSE BEGIN
                  IF recCust.GET(recSerInvHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := COPYSTR(recCust."E-Mail",1,50);
                  END;
                END;
              END ELSE BEGIN
                CustomerStateCode := '';
                CustomerPhone := '';
                CustomerEmail := '';
              END;

      //FOR Dispatch

          recLoc.GET(recSerInvHdr."Location Code");
          DispatcherGSTIN := recLoc."GST Registration No.";
          DispatcherTradeName := recLoc.Name;
          DispatcherAddress1 := recLoc.Address;
          DispatcherAddress2 := recLoc."Address 2";
          DispatcherLocation := recLoc.City;
          DispatcherPincode := recLoc."Post Code";
          recState.RESET();
          recState.SETRANGE(Code,recLoc."State Code");
            IF recState.FIND('-') THEN
              DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //For Ship detail

          IF recSerInvHdr."Ship-to Code" <> '' THEN BEGIN
            recLoc.GET(recSerInvHdr."Location Code");
            ShipToAddr.GET(recSerInvHdr."Customer No.",recSerInvHdr."Ship-to Code");
            ShipToGSTIN := ShipToAddr."GST Registration No.";
            ShipToTradeName := recSerInvHdr."Ship-to Name";
            ShipToLegalName := recSerInvHdr."Ship-to Name";
            ShipToAddress1 := recSerInvHdr."Ship-to Address";
            ShipToAddress2 := recSerInvHdr."Ship-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerInvHdr."Posting Date");
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSerInvHdr."Ship-to City";
            Dst := recSerInvHdr."Ship-to City";
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSerInvHdr."Ship-to Post Code",1,6);
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recSerInvHdr."GST Ship-to State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
            ShipToEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
          END
          ELSE
          IF recSerInvHdr."Ship-to Code" = '' THEN BEGIN
            //recLoc.GET(recSalesInvHeader."Location Code");
            recCust.GET(recSerInvHdr."Customer No.");
           // ShipToGSTIN := recSerInvHdr."Customer GST Reg. No."; //kh271220
            ShipToTradeName := recSerInvHdr.Name;
            ShipToLegalName := recSerInvHdr.Name;
            ShipToAddress1 := recSerInvHdr.Address;
            ShipToAddress2 := recSerInvHdr."Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerInvHdr."Posting Date");
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSerInvHdr.City;
            Dst := recSerInvHdr.City;
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSerInvHdr."Post Code",1,6);
            IF (recSerInvHdr."GST Customer Type" = recSerInvHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recCust."State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(recCust."Phone No.",1,10);
            ShipToEmail := COPYSTR(recCust."E-Mail",1,50);
          END;

        //For Item
        recSerInvLine.SETRANGE("Document No.",recSerInvHdr."No.");
        recSerInvLine.SETFILTER(Quantity,'<>%1',0);
      //  recSalesInvLine.SETFILTER("No.",'<>%1','122344080');
        IF recSerInvLine.FINDSET THEN BEGIN
        REPEAT
        {
          IF recSerInvLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recSerInvLine.COUNT);
         }
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := recDGLE."GST %";
             IGSTAmount := recDGLE."GST Amount";
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := (recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerInvLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerInvLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := (recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;

          lineitem := '';
          IF recSerInvLine."GST Group Type" = recSerInvLine."GST Group Type"::Goods THEN BEGIN
              Isservice := 'N';
          END ELSE BEGIN
          Isservice := 'Y';
          END;
          ProductNo := recSerInvLine."No.";
          ProductDescription :=recSerInvLine.Description;
          HSN := recSerInvLine."HSN/SAC Code" ;
          QTY := (recSerInvLine.Quantity);
          UnitPrice := FORMAT(recSerInvLine."Unit Price");
          ItemAmount := FORMAT(recSerInvLine.Amount);
          ItemDiscount := FORMAT(recSerInvLine."Line Discount Amount");
          PreTaxAmount := FORMAT(recSerInvLine."Line Amount");
          lineitem := '{"ProductNo":' +'"'+ ProductNo+'"'+ ',"ProductDescription":' +'"'+ ProductDescription+'"'  +',"Isservice":' +'"'+ Isservice +'"'
          + ',"HSN":' + '"'+HSN+'"'+ ',"Quantity":'+'"'+FORMAT(QTY)+'"'
          +',"UnitPrice":'+'"'+UnitPrice+'"'+',"ItemAmount":'+'"'+ItemAmount+'"'+',"ItemDiscount":'+'"'+ItemDiscount +'"'+',"PreTaxAmount":'+'"'+PreTaxAmount+'"'
          +',"IGSTRate":'+'"'+FORMAT(IGSTRate)+'"'+',"IGSTAmount":'+'"'+FORMAT(IGSTAmount)+'"'+',"CGSTRate":'+'"'+FORMAT(CGSTRate)+'"'+',"CGSTAmount":'+'"'+FORMAT(CGSTAmount)+'"'
          +',"SGSTRate":'+'"'+FORMAT(SGSTRate)+'"'+',"SGSTAmount":'+'"'+FORMAT(SGSTAmount)+'"'+',"FreeQuantity":'+'"'+FreeQuantity+'"'+'},' ;
          Itemlist += lineitem ;
        UNTIL recSerInvLine.NEXT=0;
        END;
        END;
       }
    END;

    PROCEDURE GenerateJSONforSerCM@1000000003(rec@1000000000 : Record 50053);
    VAR
      recSerCMHdr@1000000001 : Record 5994;
      recSerCMLine@1000000002 : Record 5995;
    BEGIN
      GenerateJSON := '';
      SNum := 0; //KH170221
      SupplyType := '';
      Typ := '';
      Dt := '';
      ReturnPeriod := '';
      OrgInvNo := '';
      CurrencyCode := '';
      DocCateg := '';
      TaxScheme := '';
      SupplierGSTIN := '';
      SupplierTradeName := '';
      SupplierLegalName := '';
      SupplierAddress1 := '';
      SupplierAddress2 := '';
      SupplierLocation := '';
      SupplierPinCode := '';
      Statename := '';
      SupplierPhone := 'null';
      SupplierEmail := 'null';
      CustomerTAN := 'null';
      CustomerGSTIN := '';
      CustomerPANOrAadhaar := 'null';
      CountryCode :='';
      CustomerTradeName := '';
      CustomerLegalName := '';
      CustomerAddress1 := '';
      CustomerAddress2 := '';
      CustomerLocation := '';
      CustomerPincode :='';
      TransType := '';
      Distance :='';
      VehicleNo := '';
      VehicleType :='';
      PaymentTerms :='null';
      CustomerCode :='';
      CustomerType := 'null';
      CustomerStateCode := '';
      CustomerPhone := '';
      CustomerEmail := 'null';
      CustomerType := 'null';
      DispatcherGSTIN := '';
      DispatcherTradeName := '';
      DispatcherAddress1 := '';
      DispatcherAddress2 := '';
      DispatcherLocation := '';
      DispatcherPincode := 'null';
      DispatcherStateCode := '';
      ShipToGSTIN :=  'null';
      ShipToTradeName := '';
      ShipToLegalName := '';
      ShipToAddress1 := '';
      ShipToAddress2 := '';
      ShippingBillDate := '';
      ShipToLocation := '';
      ShipToPincode :=  '';
      ShipToStateCode := '';
      ShipToPhone := '';
      ShipToEmail := '';


      DocType := 'Service Credit Memo';
      IGSTRate := 0;
      IGSTAmount := 0;
      CGSTRate := 0;
      CGSTAmount := 0;
      SGSTRate :=0;
      SGSTAmount := 0;
      QTY := 0;
      ProductNo := '' ;
      ProductDescription := '' ;
      HSN := '';
      UnitPrice := '';
      ItemAmount := '';
      ItemDiscount := '0';
      PreTaxAmount := '';
      Location := '';
      Isservice := '';
      CategoryOfProduct := '';
      InvoiceValueFC := '';
      InvoicePeriodStartDate := '';
      InvoicePeriodEndDate := '';
      UQC := '';
      TotalItemAmount := 0;
      ItemOtherCharges := 0;
      ItemAssessableAmount := 0;

      recSerCMHdr.RESET;
      recSerCMHdr.SETRANGE("No.",rec."No.");
      IF recSerCMHdr.FIND('-') THEN BEGIN

        UsersID := recSerCMHdr."User ID";
        Typ := 'CR';
        Dt := FORMAT(recSerCMHdr."Posting Date",0,'<Year4>-<Month,2>-<Day,2>');
        ReturnPeriod := FORMAT(recSerCMHdr."Posting Date",0,'<Month,2><Year4>');
        OrgInvNo := recSerCMHdr."No.";

         //KH040121 BEGIN
         IF recSerCMHdr."Currency Code" <> '' THEN BEGIN
            CurrencyCode := recSerCMHdr."Currency Code"
         END ELSE
            CurrencyCode := 'INR';
       //KH040121 END
         IF recSerCMHdr."Ship-to Code" <> '' THEN BEGIN
            DocCateg := 'SHP'
         END ELSE
            DocCateg := 'REG';

      IF recCust.GET(recSerCMHdr."Bill-to Customer No.") THEN BEGIN
            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
               SupplyType := 'TAX';
            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
               SupplyType := 'TAX';

            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
               recSerCMLine.RESET;
               recSerCMLine.SETRANGE("Document No.",recSerCMHdr."No.");
               IF recSerCMLine.FIND('-') THEN BEGIN
               REPEAT
               TaxAmount += recSerCMLine."Total GST Amount";
               UNTIL recSerCMLine.NEXT = 0;
               END;
              IF TaxAmount <> 0 THEN
               SupplyType := 'EXPT'
               ELSE
               SupplyType := 'EXPWT';
            END;

            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
               SupplyType := 'EXT';
            IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
               SupplyType := 'DXP';

            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Registered THEN
               TaxScheme := 'NEWB';
            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Unregistered THEN
               TaxScheme := 'NBOTH';

            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN BEGIN
               TaxScheme := 'NEWB';
            END;

            IF recCust."GST Customer Type" = recCust."GST Customer Type"::Exempted THEN
               TaxScheme := 'NBOTH';
            IF recCust."GST Customer Type" = recCust."GST Customer Type"::"Deemed Export" THEN
               TaxScheme := 'NEWB';
      END;


          CompanyInformationBuff.GET;
          LocationBuff.GET(recSerCMHdr."Location Code");
          SupplierGSTIN := LocationBuff."GST Registration No.";
          SupplierTradeName := 'Draeger India Pvt Ltd.';
          SupplierLegalName := 'Draeger India Pvt Ltd.';
          SupplierAddress1 := LocationBuff.Address;
          SupplierAddress2 := LocationBuff."Address 2";
          Flno := '';
          SupplierLocation := LocationBuff.City;
          Dst := LocationBuff.City;
          SupplierPinCode := COPYSTR(LocationBuff."Post Code",1,6);
          StateBuff.GET(LocationBuff."State Code");
          SupplierStateCode := StateBuff."State Code (GST Reg. No.)";
          recState.RESET;
          recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
            IF recState.FIND('-') THEN BEGIN
            Statename := recState.Description;
            END;
          SupplierPhone := '"'+COPYSTR(LocationBuff."Phone No.",1,10)+'"'; //KH170221
          SupplierEmail := '"'+COPYSTR(LocationBuff."E-Mail",1,50)+'"';//KH170221


      //For customer detail

          recCust.GET(recSerCMHdr."Bill-to Customer No.");
          CustomerGSTIN := recCust."GST Registration No.";
          CustomerTAN := '"'+recCust."T.A.N No."+'"';  //KH040121 //kh170221
          CustomerGSTIN := recCust."GST Registration No.";//KH040121
          CustomerPANOrAadhaar := '"'+recCust."P.A.N. No."+'"'; //KH040121 //kh170221
          CountryCode  := recCust."Country/Region Code"; //KH040121
          CustomerTradeName := recCust.Name;
          CustomerLegalName := recCust.Name;
          CustomerAddress1 := recCust.Address;
          CustomerAddress2 := recCust."Address 2";
          IF CustomerAddress2 = '' THEN
          CustomerAddress2 := 'null';
          Flno := '';
          IF recCust."GST Customer Type" = recCust."GST Customer Type"::Export THEN
          CustomerLocation := 'null'
          ELSE
          CustomerLocation := recCust.City;
          Dst := recSerCMHdr."Bill-to City";
          IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
          CustomerPincode := '999999'
          ELSE
          CustomerPincode := COPYSTR(recCust."Post Code",1,6);
          TransType := FORMAT(recSerCMHdr."Transaction Type");
      //    Distance := FORMAT(recSerCMHdr."Distance (Km)");
          VehicleNo := '';
      //    VehicleType := FORMAT(recSerCMHdr."Vehicle Type");
        //  PaymentTerms := recSerCMHdr."Payment Terms Code";
          CustomerCode :=recSerCMHdr."Bill-to Customer No.";
         // CustomerType := '';
          recSerCMLine.SETRANGE("Document No.",recSerCMHdr."No.");
          recSerCMLine.SETFILTER(Quantity,'<>%1',0);
          IF recSerCMLine.FINDFIRST THEN
            IF recSerCMLine."GST Place Of Supply" = recSerCMLine."GST Place Of Supply"::"Bill-to Address" THEN BEGIN
              IF NOT (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN BEGIN
                StateBuff.GET(recSerCMHdr."GST Bill-to State Code");
                CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
              END ELSE
                CustomerStateCode := '96';
              //KH280121 BEGIN
              {
              recCust.RESET();
              recCust.SETRANGE("No.",recSerCMHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';
               }
             //KH280121 END
              IF Contact.GET(recSerCMHdr."Bill-to Contact No.") THEN BEGIN
                CustomerPhone := COPYSTR(Contact."Phone No.",1,10);
                CustomerEmail := '"'+COPYSTR(Contact."E-Mail",1,50)+'"'; //KH170221
              END ELSE BEGIN
                  IF recCust.GET(recSerCMHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"';//KH170221
                  END;
              END;
            END ELSE
              IF recSerCMLine."GST Place Of Supply" = recSerCMLine."GST Place Of Supply"::"Ship-to Address" THEN BEGIN
                IF NOT (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN BEGIN
                  StateBuff.GET(recSerCMHdr."GST Ship-to State Code");
                  CustomerStateCode := StateBuff."State Code (GST Reg. No.)";
                END ELSE
                  CustomerStateCode := '96';
            //KH280121 BEGIN
            {
              recCust.RESET();
              recCust.SETRANGE("No.",recSerCMHdr."Customer No.");
                IF recCust.FIND('-') THEN BEGIN
                  recState.RESET();
                  recState.SETRANGE(Code,recCust."State Code");
                    IF recState.FIND('-') THEN
                      CustomerStateCode := recState."State Code (GST Reg. No.)";
                END
                  ELSE
                    CustomerStateCode := '96';
             }
           //KH280121 END
                IF ShipToAddr.GET(recSerCMHdr."Customer No.",recSerCMHdr."Ship-to Code") THEN BEGIN
                  CustomerPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
                  CustomerEmail := '"'+COPYSTR(ShipToAddr."E-Mail",1,50)+'"'; //KH170221
                END ELSE BEGIN
                  IF recCust.GET(recSerCMHdr."Customer No.") THEN BEGIN
                    CustomerPhone := COPYSTR(recCust."Phone No.",1,10);
                    CustomerEmail := '"'+COPYSTR(recCust."E-Mail",1,50)+'"'; //KH170221
                  END;
                END;
              END ELSE BEGIN
                CustomerStateCode := '';
                CustomerPhone := '';
                CustomerEmail := 'null';
              END;

      //FOR Dispatch

          recLoc.GET(recSerCMHdr."Location Code");
          DispatcherGSTIN := recLoc."GST Registration No.";
          DispatcherTradeName := recLoc.Name;
          DispatcherAddress1 := recLoc.Address;
          DispatcherAddress2 := recLoc."Address 2";
          DispatcherLocation := recLoc.City;
          DispatcherPincode := recLoc."Post Code";
          recState.RESET();
          recState.SETRANGE(Code,recLoc."State Code");
            IF recState.FIND('-') THEN
              DispatcherStateCode := recState."State Code (GST Reg. No.)";

      //For Ship detail

          IF recSerCMHdr."Ship-to Code" <> '' THEN BEGIN
            recLoc.GET(recSerCMHdr."Location Code");
            ShipToAddr.GET(recSerCMHdr."Customer No.",recSerCMHdr."Ship-to Code");
            ShipToGSTIN := '"'+ShipToAddr."GST Registration No."+'"';//KH170221
            ShipToTradeName := recSerCMHdr."Ship-to Name";
            ShipToLegalName := recSerCMHdr."Ship-to Name";
            ShipToAddress1 := recSerCMHdr."Ship-to Address";
            ShipToAddress2 := recSerCMHdr."Ship-to Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerCMHdr."Posting Date");
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recSerCMHdr."Ship-to City";
            Dst := recSerCMHdr."Ship-to City";
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recSerCMHdr."Ship-to Post Code",1,6);
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recSerCMHdr."GST Ship-to State Code")THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(ShipToAddr."Phone No.",1,10);
            ShipToEmail := COPYSTR(ShipToAddr."E-Mail",1,50);
          END
          ELSE
          IF recSerCMHdr."Ship-to Code" = '' THEN BEGIN
            //recLoc.GET(recSalesInvHeader."Location Code");
            recCust.GET(recSerCMHdr."Customer No.");
            ShipToGSTIN := '"'+recCust."GST Registration No."+'"';  //kh
            ShipToTradeName := recCust.Name;
            ShipToLegalName := recCust.Name;
            ShipToAddress1 := recCust.Address;
            ShipToAddress2 := recCust."Address 2";
            Flno := '';
            ShippingBillDate := FORMAT(recSerCMHdr."Posting Date");
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToLocation := 'null'
            ELSE
            ShipToLocation := recCust.City;
            Dst := recSerCMHdr.City;
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToPincode := '999999'
            ELSE
            ShipToPincode := COPYSTR(recCust."Post Code",1,6);
            IF (recSerCMHdr."GST Customer Type" = recSerCMHdr."GST Customer Type"::Export) THEN  //KH100521
            ShipToStateCode := '96'
            ELSE
            IF StateBuff.GET(recCust."State Code") THEN
            ShipToStateCode := StateBuff."State Code (GST Reg. No.)";
            recState.SETRANGE("State Code (GST Reg. No.)",Stcd);
              IF recState.FIND('-') THEN BEGIN
                Statename := recState.Description;
              END;
            ShipToPhone := COPYSTR(recCust."Phone No.",1,10);
            ShipToEmail := COPYSTR(recCust."E-Mail",1,50);
          END;
       END;

          InvoiceValue := 0;
          InvoiceOtherCharges := 0;
          InvoiceAssessableAmount := 0;
          InvoiceIGSTAmount := 0;
          InvoiceCGSTAmount := 0;
          InvoiceSGSTAmount := 0;
          recSerCMLine.RESET;
          recSerCMLine.SETRANGE("Document No.",recSerCMHdr."No.");
          IF recSerCMLine.FIND('-') THEN BEGIN
          REPEAT
          //"Sales Invoice Line".CALCFIELDS("Charges To Customer");
          //InvoiceOtherCharges += recSerCMLine."Charges To Customer";
          InvoiceAssessableAmount += (recSerCMLine."Line Amount" - recSerCMLine."Line Discount Amount" + recSerCMLine."Charges To Customer");
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceIGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceCGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             InvoiceSGSTAmount += ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          UNTIL recSerCMLine.NEXT = 0;
          END;

       InvoiceValue := (InvoiceAssessableAmount + InvoiceIGSTAmount + InvoiceCGSTAmount + InvoiceSGSTAmount + InvoiceOtherCharges);

      //item dtl  //kaz
        recSerCMLine.RESET;
        recSerCMLine.SETRANGE("Document No.",recSerCMHdr."No.");
        recSerCMLine.SETFILTER(Quantity,'<>%1',0);
        recSerCMLine.SETFILTER("No.",'<>%1','44491050');
        IF recSerCMLine.FIND('-') THEN BEGIN
        REPEAT
        {
          IF recSerCMLine.COUNT > 100 THEN
            ERROR(SalesLinesErr,recSerCMLine.COUNT);
         }
          lineitem := '';
          SNum += 1;
          ProductNo := recSerCMLine."No.";
          ProductDescription := recSerCMLine.Description;
          //UQC := "Unit of Measure Code";
          HSN := COPYSTR(recSerCMLine."HSN/SAC Code",1,8);
          QTY := recSerCMLine.Quantity;
          UnitPrice := FORMAT(recSerCMLine."Unit Price");
          ItemAmount := FORMAT(recSerCMLine."Line Amount" - recSerCMLine."Line Discount Amount" + recSerCMLine."Charges To Customer");
          ItemDiscount := FORMAT(recSerCMLine."Line Discount Amount");
          PreTaxAmount := FORMAT(recSerCMLine."Line Amount");
          Location := recSerCMLine."Location Code";
          CategoryOfProduct := recSerCMLine."Item Category Code";
          InvoiceValueFC := FORMAT(recSerCMLine."Amount To Customer");
          InvoicePeriodStartDate := FORMAT(recSerCMLine."Service From");
          InvoicePeriodEndDate := FORMAT(recSerCMLine."Service To");
          ItemOtherCharges := (recSerCMLine."Charges To Customer" + recSerCMLine."Line Amount");
          IF recSerCMLine."GST Group Type" = recSerCMLine."GST Group Type"::Goods THEN BEGIN
              Isservice := 'N';
          END ELSE BEGIN
          Isservice := 'Y';
          END;

          recIUOM.RESET;
          recIUOM.SETRANGE(Code,recSerCMLine."Unit of Measure Code");
          IF recIUOM.FIND('-') THEN BEGIN
             recUOM.RESET;
             recUOM.SETRANGE(Code,recIUOM.Code);
             IF recUOM.FIND('-') THEN BEGIN
             UQC := recUOM.Description2
             END ELSE
             UQC := 'OTH';
          END;



          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','IGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             IGSTRate := (recDGLE."GST %");
             IGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','CGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             CGSTRate := (recDGLE."GST %");
             CGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;
          recDGLE.RESET;
          recDGLE.SETRANGE("Document No.",recSerCMLine."Document No.");
          recDGLE.SETRANGE("Document Line No.",recSerCMLine."Line No.");
          recDGLE.SETFILTER("GST Component Code",'%1','SGST') ;
          IF recDGLE.FINDSET THEN BEGIN
             REPEAT
             SGSTRate := (recDGLE."GST %");
             SGSTAmount := ABS(recDGLE."GST Amount");
             UNTIL recDGLE.NEXT =0;
          END;

       TotalItemAmount := (recSerCMLine."Line Amount" - recSerCMLine."Line Discount Amount" + recSerCMLine."Charges To Customer" + IGSTAmount + CGSTAmount + SGSTAmount );
       ItemAssessableAmount := (recSerCMLine."Line Amount" - recSerCMLine."Line Discount Amount" + recSerCMLine."Charges To Customer");
          lineitem := '{"itemNo":'+FORMAT(SNum)+',"glCodeTaxableVal":'+'null'+',"supplyType":'+'"'+SupplyType+'"'+',"fob":'+FORMAT(SNum)+',"exportDuty":'+'0'
          + ',"hsnsacCode":' + '"'+HSN+'"'+',"ProductCode":' +'"'+ ProductNo+'"'+ ',"itemDesc":' +'"'+ ProductDescription+'"'+ ',"itemType":'+'"'+CategoryOfProduct+'"'
          + ',"itemUqc":'+'"'+UQC+'"'+',"itemQty":'+DELCHR(FORMAT(QTY),'=',',')+',"taxableVal":'+DELCHR(FORMAT(ItemAssessableAmount),'=',',')
          +',"igstRt":'+DELCHR(FORMAT(IGSTRate),'=',',')+',"igstAmt":'+DELCHR(FORMAT(IGSTAmount),'=',',')+',"cgstRt":'+DELCHR(FORMAT(CGSTRate),'=',',')
          +',"cgstAmt":'+DELCHR(FORMAT(CGSTAmount),'=',',')
          +',"sgstRt":'+DELCHR(FORMAT(SGSTRate),'=',',')+',"sgstAmt":'+DELCHR(FORMAT(SGSTAmount),'=',',')
          +',"cessRtAdvalorem":'+'0'+',"cessAmtAdvalorem":'+'0'+',"cessRtSpecific":'+'0'+',"cessAmtSpecific":'+'0'+',"stateCessRt":'+'0'+',"stateCessAmt":'+'0'
          + ',"otherValues":'+'0'+',"lineItemAmt":'+DELCHR(FORMAT(InvoiceValue),'=',',')+',"tcsAmt":'+'0'
          +',"itcFlag":'+'null'+',"crDrReason":'+'null'+',"plantCode":'+'null'
          +',"serialNoII":'+'null' +',"ProductName":'+'null'+',"isService":' +'"'+ Isservice +'"'
          +',"barcode":'+'null'+',"batchNameOrNo":'+'null'+',"batchExpiryDate":'+'null'+',"warrantyDate":'+'null'
          +',"originCountry":'+'null' +',"freeQuantity":'+'0'
          +',"unitPrice":'+DELCHR(UnitPrice,'=',',')+',"itemAmt":'+DELCHR(ItemAmount,'=',',')+',"itemDiscount":'+DELCHR(ItemDiscount,'=',',')
          +',"preTaxAmt":'+DELCHR(PreTaxAmount,'=',',')
          +',"totalItemAmt":'+DELCHR(FORMAT(TotalItemAmount),'=',',')
          +',"orderLineRef":'+'null'+',"tcsCgstAmt":'+'null'+',"tcsSgstAmt":'+'null'
          +',"tdsIgstAmt":'+'0'+',"tdsCgstAmt":'+'0'+',"tdsSgstAmt":'+'0'+',"subDivision":'+'null'
          +',"udf1":'+'null'
          +',"udf2":'+'null'+',"udf3":'+'null'
          +',"udf4":'+'null'+',"udf5":'+'null'+',"udf6":'+'null'+',"udf7":'+'null'+',"udf8":'+'null'+',"udf9":'+'null'+',"udf10":'+'null'+',"udf11":'+'null'
          +',"udf12":'+'null'+',"udf13":'+'null'+',"udf14":'+'null'+',"udf15":'+'null'+',"udf16":'+'null'+',"udf17":'+'null'+',"udf18":'+'null'+',"udf19":'+'null'
          +',"udf20":'+'null'+',"udf21":'+'null'+',"udf22":'+'null'+',"udf23":'+'null'+',"udf24":'+'null'+',"udf25":'+'null'+',"udf26":'+'null'+',"udf27":'+'null'
          +',"udf28":'+'null'+',"udf29":'+'null'+',"udf30":'+'null'+',"ecomTransactionID":'+'null'
          +',"stateCessSpecificRt":'+'0'+',"stateCessSpecificAmt":'+'0'+',"tcsRtIncomeTax":'+'0'+',"tcsAmtIncomeTax":'+'0'+',"docRefNo":'+'null'+',"paidAmt":'+'0'+',"balanceAmt":'+'0'
          +',"profitCentre3":'+'null'+',"profitCentre4":'+'null'+',"profitCentre5":'+'null'
          +',"profitCentre6":'+'null'+',"profitCentre7":'+'null'+',"profitCentre8":'+'null'
          +'},' ;
          Itemlist += lineitem ;
        UNTIL recSerCMLine.NEXT=0;
        END;
        //Where := '>' ;
       // Which := ',' ;
        ProdList := DELCHR(Itemlist,'>',',');

        PreDOC := '{"preceedingInvNo":'+'null'+',"preccedingInvDate":'+'null'+',"invRef":'+'null'+'}';
        ConDetail :='{"receiptAdviceRef":'+'null'+',"receiptAdviceDate":'+'null'+',"tenderRef":'+'null'+',"contractRef":'+'null'+',"externalRef":'+'null'+',"projectRef":'+'null'+',"custPoRefNo":'+'null'+',"custPoRefDate":'+'null'+'}';
        addDoc := '{"supportingDocURL":'+'null'+',"supportingDocBase64":'+'null'+',"addlInfo":'+'null'+'}';
        attrDetail := '{"attributeName":'+'null'+',"attributeValue":'+'null'+'}';

      GenerateJSON := '{ "req" :[  { "userId":'+'null'+',"srcFileName":'+'null'+',"srcIdentifier":'+'null'+',"returnPeriod":'+'"'+ReturnPeriod+'"'+ ',"suppGstin":'+ '"'+SupplierGSTIN+'"'
         + ',"docType" :'+ '"'+Typ+'"' + ',"docNo" :' + '"'+OrgInvNo+'"' +',"docDate":'+ '"'+Dt+'"'+',"orgDocType":'+'"'+'INV'+'"'+',"crDRPreGst":'+'null'
         +',"custGstin":'+ '"'+CustomerGSTIN+'"'+',"custOrSupType":'+CustomerType+',"diffPercent":'+'null'+',"orgCgstin":'+'"'+CustomerGSTIN+'"'
         +',"custOrSupName":'+'"'+CustomerLegalName+'"'+',"custOrSupCode":'+'"'+CustomerCode+'"'+',"custOrSupAddr1":'+'"'+CustomerAddress1+'"'
         +',"custOrSupAddr2":'+ '"'+CustomerAddress2+'"'+',"custOrSupAddr4":'+ '"'+CustomerLocation+'"'+',"billToState":'+'"'+CustomerStateCode+'"'
         +',"shipToState":'+'"'+ShipToStateCode+'"'+',"pos":'+'"'+CustomerStateCode+'"'+',"stateApplyingCess":'+'null'+',"portCode":'+'null'
         +',"shippingBillNo":'+'null'+',"shippingBillDate":'+'"'+ShippingBillDate+'"'+ ',"sec7OfIgstFlag":'+ 'null'
         + ',"reverseCharge":'+'null'+',"tcsFlag":'+'null'+',"ecomGSTIN":'+'null'+',"claimRefundFlag":'+'null'+',"autoPopToRefundFlag":'+'null'
         +',"accVoucherNo":'+'null'+',"accVoucherDate":'+'null'+',"ewbNo":'+'null'+',"ewbDate":'+'null'
         +',"irn" :' + 'null' + ',"irndate" :' + 'null'
         + ', "taxScheme" :' + '"'+TaxScheme+'"' + ',"docCat":'+ '"'+DocCateg+'"'+',"supTradeName":'+ '"'+SupplierTradeName+'"' + ',"supLegalName":'+ '"'+SupplierLegalName+'"'
         + ',"supBuildingNo":'+'"'+SupplierAddress1+'"'+',"supBuildingName":'+'"'+SupplierAddress2+'"'+',"supLocation":'+ '"'+SupplierLocation+'"' +',"supPincode":'+'"'+ SupplierPinCode+'"'
         +',"supStateCode":'+ '"'+SupplierStateCode+'"' +',"supPhone":'+'null'+',"supEmail":'+'null'
         +',"custTradeName":'+ '"'+CustomerTradeName+'"'+',"custLegalName":'+ '"'+CustomerTradeName+'"'+',"custPincode":'+'"'+CustomerPincode+'"'
         +',"custPhone":'+'null'+',"custEmail":'+'null'
         +',"dispatcherGSTIN":'+'"'+DispatcherGSTIN+'"'+',"dispatcherTradeName":'+'"'+DispatcherTradeName+'"'
         +',"dispatcherBuildingNo":'+'"'+DispatcherAddress1+'"'+',"dispatcherBuildingName":'+'"'+DispatcherAddress1+'"'+',"dispatcherLocation":'+'"'+DispatcherLocation+'"'
         +',"dispatcherPincode":'+DispatcherPincode+',"dispatcherStateCode":'+'"'+DispatcherStateCode+'"'
         +',"shipToGstin":'+'null'+',"shipToTradeName":'+'null'
         +',"shipToLegalName":'+'null'+',"shipToBuildingNo":'+'null'+',"shipToBuildingName":'+'null'+',"shipToLocation":'+'null'
         +',"shipToPincode":'+'null'+',"invOtherCharges":'+'"0"'+',"invAssessableAmt":'+DELCHR(FORMAT(InvoiceAssessableAmount),'=',',')
         +',"invIgstAmt":'+DELCHR(FORMAT(InvoiceIGSTAmount),'=',',')
         +',"invCgstAmt":'+DELCHR(FORMAT(InvoiceCGSTAmount),'=',',')+',"invSgstAmt":'+DELCHR(FORMAT(InvoiceSGSTAmount),'=',',')+',"invCessAdvaloremAmt":'+'0'
         +',"invCessSpecificAmt":'+'0'+',"invStateCessAmt":'+'0'+',"roundOff":'+'0'+',"totalInvValueInWords":'+'null'
         +',"foreignCurrency":'+'"'+CurrencyCode+'"'+',"countryCode":'+'"'+CountryCode+'"'+',"invValueFc":'+DELCHR(InvoiceValueFC,'=',',')
         +',"invPeriodStartDate":'+'null'
         +',"invPeriodEndDate":'+'null'+',"payeeName":'+'null'+',"modeOfPayment":'+'null'+',"branchOrIfseCode":'+'null'+',"paymentTerms":'+'"'+PaymentTerms+'"'
         +',"paymentInstruction":'+'null'+',"creditTransfer":'+'null'+',"directDebit":'+'null'
         +',"creditDays":'+'null'+',"paymentDueDate":'+'null'+',"accDetail":'+'null'+',"tdsFlag":'+'null'+',"tranType":'+'"'+'O'+'"'
         + ',"subsupplyType":'+'"'+'TAX'+'"'+',"otherSupplyTypeDesc":'+'null'
         +',"transporterID":'+'null'
         +',"transporterName":'+'null'+',"transportMode":'+'null'+',"transportDocNo":'+'null'+',"transportDocDate":'+'null'
         +',"distance":'+'0'+',"vehicleNo":'+'null'
         +',"vehicleType":'+'null'+',"exchangeRt":'+'null'+',"companyCode":'+'null'+',"glPostingDate":'+'null'+',"salesOrderNo":'+'null'
         +',"custTan":'+CustomerTAN + ', "canReason" :' + 'null' + ',"canRemarks" :' + 'null'+',"invStateCessSpecificAmt":'+'0'
         +',"tcsFlagIncomeTax":'+'null' +',"custPANOrAadhaar":'+CustomerPANOrAadhaar +',"glStateCessSpecific":'+'null'
         +',"glCodeIgst":'+'null'
         +',"glCodeCgst":'+'null'+',"glCodeSgst":'+'null'+',"glCodeAdvCess":'+'null'+',"glCodeSpCess":'+'null'+',"glCodeStateCess":'+'null'
         +',"location":'+'null'+',"division":'+'null'+',"salesOrg":'+'null'+',"distChannel":'+'null'+',"profitCentre1":'+'null'+',"profitCentre2":'+'null'
         +',"invRemarks":'+'null'
         +',"preDocDtls":['+PreDOC+']'
         +',"contrDtls":['+ConDetail+']'
         +',"addlDocDtls":['+addDoc+']'
         +',"lineItems":['+ProdList+']'
         +',"attribDtls":['+attrDetail+']'
         +'}] }';


      MESSAGE('Generate E-Invoice : %1',GenerateJSON);


      //KH 040521 BEGIN

      recSaleRecSetup.GET;
      AuthURL            := recSaleRecSetup."E-way & E-Inv Auth. URL" ;
      GenIRNURL          := recSaleRecSetup."E-Invoice Generate IRN URL" ;
      AuthUserName       := recSaleRecSetup."E-way & E-Inv User ID";
      AuthPassword       := recSaleRecSetup."E-way & E-Inv Password" ;
      APIAccessKey       := recSaleRecSetup."E-way & E-Inv API Key";

      GenIRN             :=  GenIRN.EInvoicing();
      ResponseStr        :=  GenIRN.GenerareIRN(AuthURL,GenIRNURL,AuthUserName, AuthPassword , APIAccessKey ,GenerateJSON ) ;
      MESSAGE (ResponseStr);
      GetString          :=  COPYSTR(ResponseStr,1,1);

      IF GetString = '1' THEN BEGIN
      SelectString := CONVERTSTR(ResponseStr,'|',',');
      //MESSAGE(SelectString);
      DocNo              := SELECTSTR(3,SelectString);
      IRNNo              := SELECTSTR(7,SelectString);
      AckNo              := SELECTSTR(5,SelectString);
      AcKDate            := SELECTSTR(6,SelectString);
      QRCode             := SELECTSTR(8,SelectString);
      END;

       IF GetString = '0' THEN BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Failure';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;
              rec."E-Invoice IRN Status" := 'Failure' ;
              rec.MODIFY;
            END ELSE
            BEGIN
            recResponseLog.INIT;
            recResponseLog."Document No." := rec."No.";
            recResponseLog."Response Date" := TODAY;
            recResponseLog."Response Time" := TIME;
            recResponseLog.Status := 'Success';
            IF COPYSTR(ResponseStr,1,250) <> '' THEN
              recResponseLog."Response Log 1" := COPYSTR(ResponseStr,1,250);
            IF COPYSTR(ResponseStr,251,250) <> '' THEN
              recResponseLog."Response Log 2" := COPYSTR(ResponseStr,251,250);
            IF COPYSTR(ResponseStr,501,250) <> '' THEN
              recResponseLog."Response Log 3" := COPYSTR(ResponseStr,501,250);
            IF COPYSTR(ResponseStr,751,250) <> '' THEN
              recResponseLog."Response Log 4" := COPYSTR(ResponseStr,751,250);
            IF COPYSTR(ResponseStr,1001,250) <> '' THEN
              recResponseLog."Response Log 5" := COPYSTR(ResponseStr,1001,250);
            IF COPYSTR(ResponseStr,1251,250) <> '' THEN
              recResponseLog."Response Log 6" := COPYSTR(ResponseStr,1251,250);
            IF COPYSTR(ResponseStr,1501,250) <> '' THEN
              recResponseLog."Response Log 7" := COPYSTR(ResponseStr,1501,250);
            IF COPYSTR(ResponseStr,1751,250) <> '' THEN
              recResponseLog."Response Log 8" := COPYSTR(ResponseStr,1751,250);
              recResponseLog.INSERT;

              rec."E-Invoice IRN No"  := IRNNo ;
              rec."E-Invoice Acknowledge No." := AckNo ;
              rec."E-Invoice Acknowledge Date" := AcKDate ;
              rec."E-Invoice Status" := 'Success';
              rec."E-Invoice IRN Status" := 'Success' ;
              rec.MODIFY;
              IF QRCode <> '' THEN BEGIN
              QRCodeManagement(DocNo,QRCode,IRNNo);
             END;
          END;
      //KH 040521 END
    END;

    PROCEDURE QRCodeManagement@1000000005(DocNo@1000000000 : Code[30];QRText@1000000001 : Text;IRNNo@1000000002 : Text);
    VAR
      TextToQR@1000000003 : Text;
      ImageFormat@1000000004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Imaging.ImageFormat";
      QrCodeBitmap@1000000005 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      MyURL@1000000006 : Text;
      BarcodeFormat@1000000007 : DotNet "'zxing, Version=0.14.0.0, Culture=neutral, PublicKeyToken=4e88037ac681fe60'.ZXing.BarcodeFormat";
      BarcodeWriter@1000000008 : DotNet "'zxing, Version=0.14.0.0, Culture=neutral, PublicKeyToken=4e88037ac681fe60'.ZXing.BarcodeWriter";
      EncodingOption@1000000009 : DotNet "'zxing, Version=0.14.0.0, Culture=neutral, PublicKeyToken=4e88037ac681fe60'.ZXing.Common.EncodingOptions";
      BitMatrix@1000000010 : DotNet "'zxing, Version=0.14.0.0, Culture=neutral, PublicKeyToken=4e88037ac681fe60'.ZXing.Common.BitMatrix";
      FileManagement@1000000011 : Codeunit 419;
      TempBlob@1000000012 : Record 99008535;
      SaveLocation@1000000013 : Text;
      TempLocation@1000000014 : Text;
      recEwayEinvoice@1000000015 : Record 50053;
      Instream@1000000016 : InStream;
      TempBlob2@1000000017 : Record 99008535;
    BEGIN
      recEwayEinvoice.RESET();
      recEwayEinvoice.SETRANGE("No.",DocNo);
        IF recEwayEinvoice.FIND('-') THEN BEGIN
          EncodingOption := EncodingOption.EncodingOptions();
          EncodingOption.Height := 26;
          EncodingOption.Width := 26;
          TempLocation:='D:\QR Code\';
          BarcodeWriter := BarcodeWriter.BarcodeWriter();
          BarcodeWriter.Format := BarcodeFormat.QR_CODE;
          BarcodeWriter.Options := EncodingOption;
          TextToQR := QRText;
          BitMatrix := BarcodeWriter.Encode(TextToQR);
          QrCodeBitmap := BarcodeWriter.Write(BitMatrix);
          SaveLocation := TempLocation + TextToQR + '.bmp';
          IF NOT ISSERVICETIER THEN
            IF EXISTS(SaveLocation) THEN
              ERASE(SaveLocation);
          TempBlob2.INIT;
          TempBlob2.Blob.CREATEINSTREAM(Instream);
          Instream.READTEXT(SaveLocation);
          QrCodeBitmap.Save(Instream, ImageFormat.Bmp);
          recEwayEinvoice.RESET();
          recEwayEinvoice.SETRANGE("No.",DocNo);
          IF recEwayEinvoice.FIND('-') THEN
          recEwayEinvoice."QR Code".CREATEOUTSTREAM(Instr);
          QrCodeBitmap.Save(Instr,ImageFormat.Bmp);
          recEwayEinvoice.MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

