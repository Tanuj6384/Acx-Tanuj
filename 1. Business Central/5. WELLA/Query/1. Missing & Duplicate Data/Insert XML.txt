
declare  

@XmlHeader XML='<NewDataSet>\r\n  <TRAININGDETAILSHEADER>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGTYPE>InSalon</TRAININGTYPE>\r\n    <TRAININGCODE>TR000001</TRAININGCODE>\r\n    <TRAINERCODE>TRN121</TRAINERCODE>\r\n    <SITECODE>2002788766</SITECODE>\r\n    <SELLERCODE>DSE1014</SELLERCODE>\r\n    <Lat>0</Lat>\r\n    <Long>0</Long>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <REMARK />\r\n    <ENDDATE />\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n  </TRAININGDETAILSHEADER>\r\n</NewDataSet>',
@XmlLine XML='<NewDataSet>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST24747</STYLISTCODE>\r\n    <STYLISTNAME>SANDIP SHINDE</STYLISTNAME>\r\n    <STYLISTMOBILENO>8411991705</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST24743</STYLISTCODE>\r\n    <STYLISTNAME>AMOL BAVISKAR</STYLISTNAME>\r\n    <STYLISTMOBILENO>8668846742</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST24738</STYLISTCODE>\r\n    <STYLISTNAME>SHUBHAM SARKATE</STYLISTNAME>\r\n    <STYLISTMOBILENO>9511872899</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST24741</STYLISTCODE>\r\n    <STYLISTNAME>DURGA BORSE</STYLISTNAME>\r\n    <STYLISTMOBILENO>9529041661</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST24749</STYLISTCODE>\r\n    <STYLISTNAME>JAYASHREE TUPE</STYLISTNAME>\r\n    <STYLISTMOBILENO>9561952191</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST27423</STYLISTCODE>\r\n    <STYLISTNAME>AMOL CHAVAN</STYLISTNAME>\r\n    <STYLISTMOBILENO>9975707970</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n  <TRAININGDETAILSLINE>\r\n    <TRNAPPID>TRN12120230206164102348000</TRNAPPID>\r\n    <TRAININGDATE>06-Feb-2023</TRAININGDATE>\r\n    <STYLISTCODE>ST27422</STYLISTCODE>\r\n    <STYLISTNAME>AARTI RATHOR</STYLISTNAME>\r\n    <STYLISTMOBILENO>7385760702</STYLISTMOBILENO>\r\n    <SALONCODE>JAL0044</SALONCODE>\r\n    <SALONREMARK />\r\n  </TRAININGDETAILSLINE>\r\n</NewDataSet>'
,@USERCODE NVARCHAR(20)='TRN121'
,@DATAAREAID NVARCHAR(4)='7200'
--)                    
--as                    
--BEGIN TRY          
--BEGIN TRANSACTION INSTRAINING    
---------------INSERT DATA FROM XML TO TEMP TABLE HEADER---------------  
DECLARE @iDocument INT                     
EXEC SP_XML_PREPAREDOCUMENT @iDocument OUTPUT,@XmlHeader                                
DECLARE @TRAINING TABLE                      
(TRNAPPID  NVARCHAR(30),TRAININGTYPE NVARCHAR(20),TRAININGCODE NVARCHAR(20),TRAINERCODE NVARCHAR(20),SITECODE NVARCHAR(20),LOCATION NVARCHAR(50)        
,SELLERCODE nvarchar(20),SALONCODE NVARCHAR(20),Lat DECIMAL(36,18),Long DECIMAL(36,18),TRAININGDATE NVARCHAR(30),REMARK nvarchar(200),
WORKSHOPDAY2DATE  NVARCHAR(30),WORKSHOPDAY3DATE  NVARCHAR(30),ISMULTIDAYWORKSHOP BIT,STATUS nvarchar(20),REMARKS nvarchar(200))
        
INSERT INTO @TRAINING  
(TRNAPPID,TRAININGTYPE,TRAININGCODE,TRAINERCODE,SITECODE,LOCATION,SELLERCODE,SALONCODE,Lat,Long,TRAININGDATE,REMARK,WORKSHOPDAY2DATE,WORKSHOPDAY3DATE,ISMULTIDAYWORKSHOP,STATUS,REMARKS)                      
SELECT DISTINCT
 TRNAPPID,TRAININGTYPE,TRAININGCODE,TRAINERCODE,SITECODE,LOCATION,SELLERCODE,SALONCODE,Lat,Long,TRAININGDATE,REMARK, WORKSHOPDAY2DATE,WORKSHOPDAY3DATE,ISMULTIDAYWORKSHOP,'','' 
FROM OPENXML (@iDocument, '/NewDataSet/TRAININGDETAILSHEADER',2)                  
WITH  
(TRNAPPID  NVARCHAR(30),TRAININGTYPE NVARCHAR(20),TRAININGCODE NVARCHAR(20),TRAINERCODE NVARCHAR(20),SITECODE NVARCHAR(20),LOCATION NVARCHAR(50)            
,SELLERCODE nvarchar(20),SALONCODE NVARCHAR(20),Lat DECIMAL(36,18),Long DECIMAL(36,18)
,TRAININGDATE NVARCHAR (30),REMARK nvarchar(200),WORKSHOPDAY2DATE  NVARCHAR(30),WORKSHOPDAY3DATE  NVARCHAR(30),ISMULTIDAYWORKSHOP BIT)            
            
EXEC SP_XML_REMOVEDOCUMENT @iDocument   

------------------------------INSERT DATA FROM XML TO TEMP TABLE LINE-----------------------------
EXEC SP_XML_PREPAREDOCUMENT @iDocument OUTPUT,@XmlLine    
------------------//VALIDATION START-------------------                            

DECLARE @TRAININGLINE TABLE    
(TRNAPPID NVARCHAR(30),TRAININGDATE NVARCHAR(30),STYLISTCODE NVARCHAR(20),STYLISTNAME NVARCHAR(200),STYLISTMOBILENO NVARCHAR(20),
SALONCODE NVARCHAR(20),SALONREMARK NVARCHAR(200),STATUS nvarchar(20),REMARKS nvarchar(200))

INSERT INTO @TRAININGLINE  
(TRNAPPID,TRAININGDATE,STYLISTCODE,STYLISTNAME,STYLISTMOBILENO,SALONCODE,SALONREMARK,STATUS,REMARKS)      

 SELECT DISTINCT TRNAPPID,TRAININGDATE,STYLISTCODE,STYLISTNAME,STYLISTMOBILENO,SALONCODE,SALONREMARK,'',''
 FROM OPENXML (@iDocument, '/NewDataSet/TRAININGDETAILSLINE',2)                  
WITH  
(TRNAPPID  NVARCHAR(30),TRAININGDATE NVARCHAR(30),STYLISTCODE NVARCHAR(20),STYLISTNAME NVARCHAR(200),STYLISTMOBILENO NVARCHAR(20),
SALONCODE nvarchar(20),SALONREMARK NVARCHAR(200))
            
EXEC SP_XML_REMOVEDOCUMENT @iDocument  

--BEGIN   
        
  
-------------VALIDATION-----------------------  
UPDATE @TRAINING SET REMARKS='TrainingType should be Workshop Or Inshop',STATUS='Failed' WHERE  TRAININGTYPE NOT IN (select DESCRIPTION from AX.ACXTRAININGTYPEMASTER)--('WORKSHOP','INSALON','HOT DAY')  
------UPDATE @TRAINING SET REMARKS='Training Code should be in Training Master',STATUS='Failed' WHERE  TRAININGCODE NOT IN (select TRAININGCODE from AX.ACXTRAININGMASTER)  
UPDATE @TRAINING SET REMARKS='Trainer Code should be in Trainer Master',STATUS='Failed' WHERE  TRAINERCODE NOT IN (select TRAINERCODE from AX.ACXTRAINERMASTER)  
UPDATE @TRAINING SET REMARKS='Branch/Site Code should be in Site Master',STATUS='Failed' WHERE  SITECODE NOT IN (select SITECODE from AX.INVENTSITE)  
UPDATE @TRAINING SET REMARKS='Seller/PSR Code should be in Psr Master',STATUS='Failed' WHERE  SELLERCODE NOT IN (select PSR_Code from AX.ACXPSRMaster)  
UPDATE @TRAINING SET REMARKS='Salon/Customer Code should be in Customer Master',STATUS='Failed' WHERE TRAININGTYPE IN('Market Visit','Hot Day') AND SALONCODE NOT IN (select CUSTOMER_CODE from AX.ACXCUSTMASTER)
UPDATE @TRAININGLINE SET REMARKS='Salon Code cannot be blank' ,STATUS='Failed' WHERE SALONCODE=''
IF (SELECT COUNT(*) FROM @TRAININGLINE WHERE STATUS<>'')>0
BEGIN
UPDATE @TRAINING SET REMARKS='INCORRECT' ,STATUS='Failed'
END
IF (SELECT COUNT(*) FROM @TRAINING WHERE STATUS<>'')>0
BEGIN
UPDATE @TRAININGLINE SET REMARKS='INCORRECT' ,STATUS='Failed'
END
IF (select count(1) from (SELECT TRNAPPID FROM @TRAINING 
GROUP BY TRNAPPID,TRAINERCODE,TRAININGDATE,TRAININGCODE,TRAININGTYPE,REMARK,SALONCODE having count(*)>1) as a)>0 
BEGIN
UPDATE @TRAINING SET REMARKS='Duplicate entry' ,STATUS='Failed'
UPDATE @TRAININGLINE SET REMARKS='Duplicate entry' ,STATUS='Failed'
END

--if(select count(*)  from @TRAINING A where A.TRAININGTYPE<> 'Virtual training' and (A.TRAINERCODE+A.TRAININGCODE+convert(varchar(15),cast(A.TRAININGDATE as date),23)+A.TRAININGTYPE+ A.SALONCODE) 
--in (select B.TRAINERCODE+B.TRAININGCODE+convert(varchar(15),cast(B.TRAININGDATE as date) ,23)+B.TRAININGTYPE+B.SALONCODE from ax.ACXTRAININGDETAILS B where TRAININGTYPE<> 'Virtual training' )) >0
--BEGIN
--UPDATE @TRAINING SET REMARKS='Duplicate entry' ,STATUS='Failed'
--UPDATE @TRAININGLINE SET REMARKS='Duplicate entry' ,STATUS='Failed'
--End

-----------------------------------------------------------------------------
declare @TRAINERCODE nvarchar (10)=(select distinct TRAINERCODE from @TRAINING)
DELETE FROM AX.ACXTRAININGDETAILS WHERE TRNAPPID in (select distinct trnappid from @TRAINING) AND TRAINERCODE=@TRAINERCODE AND TRAININGDATE= CAST(GETDATE() AS DATE)
DELETE FROM AX.ACXTRAININGDETAILSSTYLISTWISE WHERE TRNAPPID in (select distinct trnappid from @TRAINING)  AND CREATEDBY=@TRAINERCODE AND DATAAREAID='7200' AND TRAININGDATE= CAST(GETDATE() AS DATE)



-------------FIND NEW DOC NO------------------ 
DECLARE @DOCNO NVARCHAR(20)   
SELECT @DOCNO= 'T' +FORMAT(ISNULL(MAX(SUBSTRING([TRAININGDOC],2,10)),0)+1,'0000000000')      
FROM [ax].[ACXTRAININGDETAILS] WHERE [TRAININGDOC] LIKE 'T[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'      
  
--Comment and Uncomment
INSERT INTO [ax].[ACXTRAININGDETAILS](TRAININGDOC,TRNAPPID,TRAININGTYPE,TRAININGCODE,TRAINERCODE,SITECODE,LOCATION,SELLERCODE,SALONCODE,
Lat,Long,DATAAREAID,CREATEDBY,MODIFIEDBY,CREATEDDATETIME,MODIFIEDDATETIME,TRAININGDATE,REMARK,
WORKSHOPDAY2DATE,WORKSHOPDAY3DATE,ISMULTIDAYWORKSHOP,RECID)    
  
SELECT TDH.*,(SELECT ISNULL(MAX(RECID),0)+1 FROM [ax].[ACXTRAININGDETAILS]) RECID FROM (
SELECT DISTINCT @DOCNO DOCNO,TRNAPPID,TRAININGTYPE,ISNULL(TRAININGCODE,'')TRAININGCODE,TRAINERCODE,ISNULL(SITECODE,'')SITECODE, ISNULL(LOCATION,'') LOCATION
,ISNULL(SELLERCODE,'')SELLERCODE,ISNULL(SALONCODE,'')SALONCODE,Lat,Long,@DATAAREAID DATAAREAID,@USERCODE CREATEDBY,@USERCODE MODIFIEDBY,
GETDATE() CREATEDDATETIME,GETDATE() MODIFIEDDATETIME,TRAININGDATE,ISNULL(REMARK,'') REMARK,
ISNULL(WORKSHOPDAY2DATE,'') WORKSHOPDAY2DATE,
ISNULL(WORKSHOPDAY3DATE,'') WORKSHOPDAY3DATE,ISNULL(ISMULTIDAYWORKSHOP,'') ISMULTIDAYWORKSHOP
FROM @TRAINING WHERE  REMARKS='' and STATUS<> 'Failed' ---AND CAST(TRAININGDATE AS date) = CAST(GETDATE() AS DATE)
)TDH
  
--Comment and Uncomment 
INSERT INTO [ax].[ACXTRAININGDETAILSSTYLISTWISE](TRAININGDOC,TRNAPPID,TRAININGDATE,STYLISTCODE,STYLISTNAME,STYLISTMOBILENO,SALONCODE,
SALONREMARK,DATAAREAID,CREATEDBY,MODIFIEDBY,CREATEDDATETIME,MODIFIEDDATETIME,RECID)     
SELECT TDL.*,
((ROW_NUMBER() OVER (ORDER BY @USERCODE,SALONCODE)+(SELECT ISNULL(MAX(RECID),0)+1 FROM [ax].[ACXTRAININGDETAILSSTYLISTWISE]))) RECID FROM (
SELECT DISTINCT @DOCNO DOCNO,TRNAPPID,TRAININGDATE,ISNULL(STYLISTCODE,'') STYLISTCODE,ISNULL(STYLISTNAME,'')STYLISTNAME
,ISNULL(STYLISTMOBILENO,'')STYLISTMOBILENO,ISNULL(SALONCODE,'') SALONCODE,ISNULL(SALONREMARK,'')SALONREMARK, @DATAAREAID DATAAREAID ,@USERCODE CREATEDBY,@USERCODE MODIFIEDBY,GETDATE() CREATEDDATETIME,GETDATE() MODIFIEDDATETIME
FROM @TRAININGLINE  WHERE  REMARKS=''  and STATUS<> 'Failed' --AND CAST(TRAININGDATE AS DATE) = CAST(GETDATE() AS DATE)
) TDL
        
--------------------------------------------------  

--UPDATE T SET Status='SUCCESS',REMARKS='INSERTED SUCCESSFULLY' FROM @TRAINING T WHERE REMARKS=''   
------------------------SMS-------------------
--exec [WELLADMSPROD].[dbo].[USP_SEND_TRAINING_MSG]
----------------------------------------------
--END   
--COMMIT TRANSACTION INSTRAINING    
SELECT DISTINCT * FROM  @TRAINING         
--END TRY     

--BEGIN CATCH    
--    DECLARE @ErrorMessage NVARCHAR(4000);                    
--DECLARE @ErrorSeverity INT;                    
--    DECLARE @ErrorState INT;                    
--    SELECT    
--        @ErrorMessage = ERROR_MESSAGE(),                    
--        @ErrorSeverity = ERROR_SEVERITY(),              
--   @ErrorState = ERROR_STATE();           
--    RAISERROR (@ErrorMessage, -- Message text.                    
--               @ErrorSeverity, -- Severity.                    
--               @ErrorState -- State.                   
--               );                    
--ROLLBACK TRANSACTION INSTRAINING    
--END CATCH; 
